/*
 * Linker script for PIC33AK128MC106
 * (c) Copyright 2023- Microchip Technology, Inc
 * Part support version 1.60.B(09-Jul-2024)
 *
 * This software is developed by Microchip Technology Inc. and its
 * subsidiaries ("Microchip").
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are 
 * met:
 * 
 * 1.      Redistributions of source code must retain the above copyright
 *         notice, this list of conditions and the following disclaimer.
 * 2.      Redistributions in binary form must reproduce the above 
 *         copyright notice, this list of conditions and the following 
 *         disclaimer in the documentation and/or other materials provided 
 *         with the distribution. Publication is not required when
 *         this file is used in an embedded application.
 * 3.      Microchip's name may not be used to endorse or promote products
 *         derived from this software without specific prior written 
 *         permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR PURPOSE ARE DISCLAIMED. IN NO EVENT 
 * SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */


OUTPUT_ARCH("33AK128MC106")
CRT0_STARTUP(crt0_extendedaa.o)
CRT1_STARTUP(crt1_extendedaa.o)
#if __XC16_VERSION__ > 1027
/*
 * Define how to startup, by default we initialize
 * everything as normal; change to crt_start_mode to
 * preserve preserved data on a restart
 *
 * Or define your own __crt_start_mode fucntion
 */
CRT_STARTMODE(crt_start_mode_normal)
#endif

OPTIONAL(-lp33AK128MC106)
OPTIONAL(-lfx)

/*
** Memory Regions
*/
MEMORY
{
  data  (a!xr)   : ORIGIN = 0x4000,        LENGTH = 0x4000
  FCP            : ORIGIN = 0x7F3000,      LENGTH = 0x2
  FICD           : ORIGIN = 0x7F3010,      LENGTH = 0x2
  FDEVOPT        : ORIGIN = 0x7F3020,      LENGTH = 0x2
  FWDT           : ORIGIN = 0x7F3030,      LENGTH = 0x2
  FCPBKUP        : ORIGIN = 0x7F3800,      LENGTH = 0x2
  FICDBKUP       : ORIGIN = 0x7F3810,      LENGTH = 0x2
  FDEVOPTBKUP    : ORIGIN = 0x7F3820,      LENGTH = 0x2
  FWDTBKUP       : ORIGIN = 0x7F3830,      LENGTH = 0x2
  FPR0CTRL       : ORIGIN = 0x7F4000,      LENGTH = 0x2
  FPR0ST         : ORIGIN = 0x7F4004,      LENGTH = 0x2
  FPR0END        : ORIGIN = 0x7F4008,      LENGTH = 0x2
  FPR1CTRL       : ORIGIN = 0x7F4010,      LENGTH = 0x2
  FPR1ST         : ORIGIN = 0x7F4014,      LENGTH = 0x2
  FPR1END        : ORIGIN = 0x7F4018,      LENGTH = 0x2
  FPR2CTRL       : ORIGIN = 0x7F4020,      LENGTH = 0x2
  FPR2ST         : ORIGIN = 0x7F4024,      LENGTH = 0x2
  FPR2END        : ORIGIN = 0x7F4028,      LENGTH = 0x2
  FPR3CTRL       : ORIGIN = 0x7F4030,      LENGTH = 0x2
  FPR3ST         : ORIGIN = 0x7F4034,      LENGTH = 0x2
  FPR3END        : ORIGIN = 0x7F4038,      LENGTH = 0x2
  FPR4CTRL       : ORIGIN = 0x7F4040,      LENGTH = 0x2
  FPR4ST         : ORIGIN = 0x7F4044,      LENGTH = 0x2
  FPR4END        : ORIGIN = 0x7F4048,      LENGTH = 0x2
  FPR5CTRL       : ORIGIN = 0x7F4050,      LENGTH = 0x2
  FPR5ST         : ORIGIN = 0x7F4054,      LENGTH = 0x2
  FPR5END        : ORIGIN = 0x7F4058,      LENGTH = 0x2
  FPR6CTRL       : ORIGIN = 0x7F4060,      LENGTH = 0x2
  FPR6ST         : ORIGIN = 0x7F4064,      LENGTH = 0x2
  FPR6END        : ORIGIN = 0x7F4068,      LENGTH = 0x2
  FPR7CTRL       : ORIGIN = 0x7F4070,      LENGTH = 0x2
  FPR7ST         : ORIGIN = 0x7F4074,      LENGTH = 0x2
  FPR7END        : ORIGIN = 0x7F4078,      LENGTH = 0x2
  FIRT           : ORIGIN = 0x7F4080,      LENGTH = 0x2
  FSECDBG        : ORIGIN = 0x7F4090,      LENGTH = 0x2
  FPED           : ORIGIN = 0x7F40A0,      LENGTH = 0x2
  FEPUCB         : ORIGIN = 0x7F40B0,      LENGTH = 0x2
  FWPUCB         : ORIGIN = 0x7F40C0,      LENGTH = 0x2
  FPR0CTRLBKUP   : ORIGIN = 0x7F4800,      LENGTH = 0x2
  FPR0STBKUP     : ORIGIN = 0x7F4810,      LENGTH = 0x2
  FPR0ENDBKUP    : ORIGIN = 0x7F4814,      LENGTH = 0x2
  FPR1CTRLBKUP   : ORIGIN = 0x7F481C,      LENGTH = 0x2
  FPR1STBKUP     : ORIGIN = 0x7F4820,      LENGTH = 0x2
  FPR1ENDBKUP    : ORIGIN = 0x7F4824,      LENGTH = 0x2
  FPR2CTRLBKUP   : ORIGIN = 0x7F482C,      LENGTH = 0x2
  FPR2STBKUP     : ORIGIN = 0x7F4830,      LENGTH = 0x2
  FPR2ENDBKUP    : ORIGIN = 0x7F4834,      LENGTH = 0x2
  FPR3CTRLBKUP   : ORIGIN = 0x7F483C,      LENGTH = 0x2
  FPR3STBKUP     : ORIGIN = 0x7F4840,      LENGTH = 0x2
  FPR3ENDBKUP    : ORIGIN = 0x7F4844,      LENGTH = 0x2
  FPR4CTRLBKUP   : ORIGIN = 0x7F484C,      LENGTH = 0x2
  FPR4STBKUP     : ORIGIN = 0x7F4850,      LENGTH = 0x2
  FPR4ENDBKUP    : ORIGIN = 0x7F4854,      LENGTH = 0x2
  FPR5CTRLBKUP   : ORIGIN = 0x7F485C,      LENGTH = 0x2
  FPR5STBKUP     : ORIGIN = 0x7F4860,      LENGTH = 0x2
  FPR5ENDBKUP    : ORIGIN = 0x7F4864,      LENGTH = 0x2
  FPR6CTRLBKUP   : ORIGIN = 0x7F486C,      LENGTH = 0x2
  FPR6STBKUP     : ORIGIN = 0x7F4870,      LENGTH = 0x2
  FPR6ENDBKUP    : ORIGIN = 0x7F4874,      LENGTH = 0x2
  FPR7CTRLBKUP   : ORIGIN = 0x7F487C,      LENGTH = 0x2
  FPR7STBKUP     : ORIGIN = 0x7F4880,      LENGTH = 0x2
  FPR7ENDBKUP    : ORIGIN = 0x7F4884,      LENGTH = 0x2
  FIRTBKUP       : ORIGIN = 0x7F488C,      LENGTH = 0x2
  FSECDBGBKUP    : ORIGIN = 0x7F489C,      LENGTH = 0x2
  FPEDBKUP       : ORIGIN = 0x7F48AC,      LENGTH = 0x2
  FEPUCBBKUP     : ORIGIN = 0x7F48BC,      LENGTH = 0x2
  FWPUCBBKUP     : ORIGIN = 0x7F48CC,      LENGTH = 0x2
  reset          : ORIGIN = 0x800000,      LENGTH = 0x4
  ivt            : ORIGIN = 0x800004,      LENGTH = 0xFFC
  program (xr)   : ORIGIN = 0x801000,      LENGTH = 0x3FFF
}

__FCP = 0x7F3000;
__FICD = 0x7F3010;
__FDEVOPT = 0x7F3020;
__FWDT = 0x7F3030;
__FCPBKUP = 0x7F3800;
__FICDBKUP = 0x7F3810;
__FDEVOPTBKUP = 0x7F3820;
__FWDTBKUP = 0x7F3830;
__FPR0CTRL = 0x7F4000;
__FPR0ST = 0x7F4004;
__FPR0END = 0x7F4008;
__FPR1CTRL = 0x7F4010;
__FPR1ST = 0x7F4014;
__FPR1END = 0x7F4018;
__FPR2CTRL = 0x7F4020;
__FPR2ST = 0x7F4024;
__FPR2END = 0x7F4028;
__FPR3CTRL = 0x7F4030;
__FPR3ST = 0x7F4034;
__FPR3END = 0x7F4038;
__FPR4CTRL = 0x7F4040;
__FPR4ST = 0x7F4044;
__FPR4END = 0x7F4048;
__FPR5CTRL = 0x7F4050;
__FPR5ST = 0x7F4054;
__FPR5END = 0x7F4058;
__FPR6CTRL = 0x7F4060;
__FPR6ST = 0x7F4064;
__FPR6END = 0x7F4068;
__FPR7CTRL = 0x7F4070;
__FPR7ST = 0x7F4074;
__FPR7END = 0x7F4078;
__FIRT = 0x7F4080;
__FSECDBG = 0x7F4090;
__FPED = 0x7F40A0;
__FEPUCB = 0x7F40B0;
__FWPUCB = 0x7F40C0;
__FPR0CTRLBKUP = 0x7F4800;
__FPR0STBKUP = 0x7F4810;
__FPR0ENDBKUP = 0x7F4814;
__FPR1CTRLBKUP = 0x7F481C;
__FPR1STBKUP = 0x7F4820;
__FPR1ENDBKUP = 0x7F4824;
__FPR2CTRLBKUP = 0x7F482C;
__FPR2STBKUP = 0x7F4830;
__FPR2ENDBKUP = 0x7F4834;
__FPR3CTRLBKUP = 0x7F483C;
__FPR3STBKUP = 0x7F4840;
__FPR3ENDBKUP = 0x7F4844;
__FPR4CTRLBKUP = 0x7F484C;
__FPR4STBKUP = 0x7F4850;
__FPR4ENDBKUP = 0x7F4854;
__FPR5CTRLBKUP = 0x7F485C;
__FPR5STBKUP = 0x7F4860;
__FPR5ENDBKUP = 0x7F4864;
__FPR6CTRLBKUP = 0x7F486C;
__FPR6STBKUP = 0x7F4870;
__FPR6ENDBKUP = 0x7F4874;
__FPR7CTRLBKUP = 0x7F487C;
__FPR7STBKUP = 0x7F4880;
__FPR7ENDBKUP = 0x7F4884;
__FIRTBKUP = 0x7F488C;
__FSECDBGBKUP = 0x7F489C;
__FPEDBKUP = 0x7F48AC;
__FEPUCBBKUP = 0x7F48BC;
__FWPUCBBKUP = 0x7F48CC;

__CODE_BASE = 0x801000;
__CODE_LENGTH = 0x1F000;
__IVT_BASE  = 0x800004;
__DATA_BASE = 0x4000;
__DATA_LENGTH = 0x4000;
__YDATA_BASE = 0x6000;
__YDATA_END = 0x8000;


/*
** ==================== Section Map ======================
*/
SECTIONS
{
  /*
  ** ========== Program Memory ==========
  */


#if !defined(__CORESIDENT) || defined(__DEFINE_RESET)
  /*
  ** Reset Vector
  */
  .reset :
  {
    LONG(ABSOLUTE(__reset));
  } >reset
#endif


  /*
  ** Interrupt Vector Tables
  **
  ** The primary and alternate tables are loaded
  ** here, between sections .reset and .text.
  ** Vector table source code appears below.
  */


  /*
  ** User Code and Library Code
  **
  ** This section must not be assigned to __CODE_BASE,
  ** because CodeGuard(tm) sections may be located there.
  **
  ** Note that input sections *(.text) are not mapped here.
  ** The best-fit allocator locates them, so that .text
  ** may flow around PSV sections as needed.
  **
  ** Define __USE_BFA to force the following sections to
  ** to also be linked by the best-fit allocator.
  */
#if !defined(__USE_BFA)
  .text :
  {
        *(.init);
        *(.user_init);
        KEEP (*(.handle));
        KEEP (*(.isr*));
        *(.libc) *(.libm) *(.libdsp);  /* keep together in this order */
        *(.lib*);
  } >program
#endif


  /*
  ** User-Defined Section in Program Memory
  **
  ** note: can specify an address using
  **       the following syntax:
  **
  **       usercode 0x1234 :
  **         {
  **           *(usercode);
  **         } >program
  */
  usercode :
  {
        *(usercode);
  } >program


  /*
  ** User-Defined Constants in Program Memory
  **
  ** For PSV type sections, the Load Memory Address (LMA)
  ** should be specified as follows:
  **
  **       userconst : AT(0x1234)
  **         {
  **           *(userconst);
  **         } >program
  **
  ** Note that mapping PSV sections in linker scripts
  ** is not generally recommended.
  **
  ** Because of page alignment restrictions, memory is
  ** often used more efficiently when PSV sections
  ** do not appear in the linker script.
  **
  ** For more information on memory allocation,
  ** please refer to chapter 10, 'Linker Processing'
  ** in the Assembler, Linker manual (DS51317).
  */


  /*
  ** Configuration Words
  */
  __FCP :
  { KEEP (*(__FCP.sec*))    } >FCP
  __FICD :
  { KEEP (*(__FICD.sec*))    } >FICD
  __FDEVOPT :
  { KEEP (*(__FDEVOPT.sec*))    } >FDEVOPT
  __FWDT :
  { KEEP (*(__FWDT.sec*))    } >FWDT
  __FCPBKUP :
  { KEEP (*(__FCPBKUP.sec*))    } >FCPBKUP
  __FICDBKUP :
  { KEEP (*(__FICDBKUP.sec*))    } >FICDBKUP
  __FDEVOPTBKUP :
  { KEEP (*(__FDEVOPTBKUP.sec*))    } >FDEVOPTBKUP
  __FWDTBKUP :
  { KEEP (*(__FWDTBKUP.sec*))    } >FWDTBKUP
  __FPR0CTRL :
  { KEEP (*(__FPR0CTRL.sec*))    } >FPR0CTRL
  __FPR0ST :
  { KEEP (*(__FPR0ST.sec*))    } >FPR0ST
  __FPR0END :
  { KEEP (*(__FPR0END.sec*))    } >FPR0END
  __FPR1CTRL :
  { KEEP (*(__FPR1CTRL.sec*))    } >FPR1CTRL
  __FPR1ST :
  { KEEP (*(__FPR1ST.sec*))    } >FPR1ST
  __FPR1END :
  { KEEP (*(__FPR1END.sec*))    } >FPR1END
  __FPR2CTRL :
  { KEEP (*(__FPR2CTRL.sec*))    } >FPR2CTRL
  __FPR2ST :
  { KEEP (*(__FPR2ST.sec*))    } >FPR2ST
  __FPR2END :
  { KEEP (*(__FPR2END.sec*))    } >FPR2END
  __FPR3CTRL :
  { KEEP (*(__FPR3CTRL.sec*))    } >FPR3CTRL
  __FPR3ST :
  { KEEP (*(__FPR3ST.sec*))    } >FPR3ST
  __FPR3END :
  { KEEP (*(__FPR3END.sec*))    } >FPR3END
  __FPR4CTRL :
  { KEEP (*(__FPR4CTRL.sec*))    } >FPR4CTRL
  __FPR4ST :
  { KEEP (*(__FPR4ST.sec*))    } >FPR4ST
  __FPR4END :
  { KEEP (*(__FPR4END.sec*))    } >FPR4END
  __FPR5CTRL :
  { KEEP (*(__FPR5CTRL.sec*))    } >FPR5CTRL
  __FPR5ST :
  { KEEP (*(__FPR5ST.sec*))    } >FPR5ST
  __FPR5END :
  { KEEP (*(__FPR5END.sec*))    } >FPR5END
  __FPR6CTRL :
  { KEEP (*(__FPR6CTRL.sec*))    } >FPR6CTRL
  __FPR6ST :
  { KEEP (*(__FPR6ST.sec*))    } >FPR6ST
  __FPR6END :
  { KEEP (*(__FPR6END.sec*))    } >FPR6END
  __FPR7CTRL :
  { KEEP (*(__FPR7CTRL.sec*))    } >FPR7CTRL
  __FPR7ST :
  { KEEP (*(__FPR7ST.sec*))    } >FPR7ST
  __FPR7END :
  { KEEP (*(__FPR7END.sec*))    } >FPR7END
  __FIRT :
  { KEEP (*(__FIRT.sec*))    } >FIRT
  __FSECDBG :
  { KEEP (*(__FSECDBG.sec*))    } >FSECDBG
  __FPED :
  { KEEP (*(__FPED.sec*))    } >FPED
  __FEPUCB :
  { KEEP (*(__FEPUCB.sec*))    } >FEPUCB
  __FWPUCB :
  { KEEP (*(__FWPUCB.sec*))    } >FWPUCB
  __FPR0CTRLBKUP :
  { KEEP (*(__FPR0CTRLBKUP.sec*))    } >FPR0CTRLBKUP
  __FPR0STBKUP :
  { KEEP (*(__FPR0STBKUP.sec*))    } >FPR0STBKUP
  __FPR0ENDBKUP :
  { KEEP (*(__FPR0ENDBKUP.sec*))    } >FPR0ENDBKUP
  __FPR1CTRLBKUP :
  { KEEP (*(__FPR1CTRLBKUP.sec*))    } >FPR1CTRLBKUP
  __FPR1STBKUP :
  { KEEP (*(__FPR1STBKUP.sec*))    } >FPR1STBKUP
  __FPR1ENDBKUP :
  { KEEP (*(__FPR1ENDBKUP.sec*))    } >FPR1ENDBKUP
  __FPR2CTRLBKUP :
  { KEEP (*(__FPR2CTRLBKUP.sec*))    } >FPR2CTRLBKUP
  __FPR2STBKUP :
  { KEEP (*(__FPR2STBKUP.sec*))    } >FPR2STBKUP
  __FPR2ENDBKUP :
  { KEEP (*(__FPR2ENDBKUP.sec*))    } >FPR2ENDBKUP
  __FPR3CTRLBKUP :
  { KEEP (*(__FPR3CTRLBKUP.sec*))    } >FPR3CTRLBKUP
  __FPR3STBKUP :
  { KEEP (*(__FPR3STBKUP.sec*))    } >FPR3STBKUP
  __FPR3ENDBKUP :
  { KEEP (*(__FPR3ENDBKUP.sec*))    } >FPR3ENDBKUP
  __FPR4CTRLBKUP :
  { KEEP (*(__FPR4CTRLBKUP.sec*))    } >FPR4CTRLBKUP
  __FPR4STBKUP :
  { KEEP (*(__FPR4STBKUP.sec*))    } >FPR4STBKUP
  __FPR4ENDBKUP :
  { KEEP (*(__FPR4ENDBKUP.sec*))    } >FPR4ENDBKUP
  __FPR5CTRLBKUP :
  { KEEP (*(__FPR5CTRLBKUP.sec*))    } >FPR5CTRLBKUP
  __FPR5STBKUP :
  { KEEP (*(__FPR5STBKUP.sec*))    } >FPR5STBKUP
  __FPR5ENDBKUP :
  { KEEP (*(__FPR5ENDBKUP.sec*))    } >FPR5ENDBKUP
  __FPR6CTRLBKUP :
  { KEEP (*(__FPR6CTRLBKUP.sec*))    } >FPR6CTRLBKUP
  __FPR6STBKUP :
  { KEEP (*(__FPR6STBKUP.sec*))    } >FPR6STBKUP
  __FPR6ENDBKUP :
  { KEEP (*(__FPR6ENDBKUP.sec*))    } >FPR6ENDBKUP
  __FPR7CTRLBKUP :
  { KEEP (*(__FPR7CTRLBKUP.sec*))    } >FPR7CTRLBKUP
  __FPR7STBKUP :
  { KEEP (*(__FPR7STBKUP.sec*))    } >FPR7STBKUP
  __FPR7ENDBKUP :
  { KEEP (*(__FPR7ENDBKUP.sec*))    } >FPR7ENDBKUP
  __FIRTBKUP :
  { KEEP (*(__FIRTBKUP.sec*))    } >FIRTBKUP
  __FSECDBGBKUP :
  { KEEP (*(__FSECDBGBKUP.sec*))    } >FSECDBGBKUP
  __FPEDBKUP :
  { KEEP (*(__FPEDBKUP.sec*))    } >FPEDBKUP
  __FEPUCBBKUP :
  { KEEP (*(__FEPUCBBKUP.sec*))    } >FEPUCBBKUP
  __FWPUCBBKUP :
  { KEEP (*(__FWPUCBBKUP.sec*))    } >FWPUCBBKUP






  /*
  ** =========== Data Memory ===========
  */


  /*
  ** ICD Debug Exec
  **
  ** This section provides optional storage for
  ** the ICD2 debugger. Define a global symbol
  ** named __ICD2RAM to enable ICD2. This section
  ** must be loaded at data address 0x4000.
  */
  .icd __DATA_BASE (NOLOAD):
  {
    . += (DEFINED (__ICD2RAM) ? 0x50 : 0 );
  } > data


  /*
  ** Other sections in data memory are not explicitly mapped.
  ** Instead they are allocated according to their section
  ** attributes, which is most efficient.
  ** 
  ** If a specific arrangement of sections is required
  ** (other than what can be achieved using attributes)
  ** additional sections may be defined here. See chapter
  ** 10.5 in the MPLAB ASM30/LINK30 User's Guide (DS51317)
  ** for more information.
  */


  /*
  ** ========== Debug Info ==============
  */

  .comment        0 : { *(.comment) }

  /*
  ** DWARF-2
  */
  .debug_info     0 : { *(.debug_info) *(.gnu.linkonce.wi.*) }
  .debug_abbrev   0 : { *(.debug_abbrev) }
  .debug_line     0 : { *(.debug_line) }
  .debug_frame    0 : { *(.debug_frame) }
  .debug_str      0 : { *(.debug_str) }
  .debug_loc      0 : { *(.debug_loc) }
  .debug_macinfo  0 : { *(.debug_macinfo) }
  .debug_pubnames 0 : { *(.debug_pubnames) }
  .debug_ranges   0 : { *(.debug_ranges) }
  .debug_aranges  0 : { *(.debug_aranges) }

} /* SECTIONS */

/*
** ================= End of Section Map ================
*/

#if 1
/*
** These definitions are not required for XC-DSC/XC16 versions
** later than XC16 v1.25 as the linker defines the addresses.
**
*/
/*
** Section Map for Interrupt Vector Tables
*/
SECTIONS
{

/*
** Interrupt Vector Table
*/
.ivt __IVT_BASE :
  {
    LONG( DEFINED(__ReservedTrap0)    ? ABSOLUTE(__ReservedTrap0)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__BusErrorTrap)    ? ABSOLUTE(__BusErrorTrap)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__IllegalInstructionTrap)    ? ABSOLUTE(__IllegalInstructionTrap)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AddressErrorTrap)    ? ABSOLUTE(__AddressErrorTrap)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__StackErrorTrap)    ? ABSOLUTE(__StackErrorTrap)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__MathErrorTrap)    ? ABSOLUTE(__MathErrorTrap)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__GeneralTrap)    ? ABSOLUTE(__GeneralTrap)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__ReservedTrap7)    ? ABSOLUTE(__ReservedTrap7)    :
         ABSOLUTE(__DefaultInterrupt));

    LONG( DEFINED(__COMMONInterrupt)    ? ABSOLUTE(__COMMONInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CPUFPUInterrupt)    ? ABSOLUTE(__CPUFPUInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__XRAMECCInterrupt)    ? ABSOLUTE(__XRAMECCInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__YRAMECCInterrupt)    ? ABSOLUTE(__YRAMECCInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PBUEInterrupt)    ? ABSOLUTE(__PBUEInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__NVMECCInterrupt)    ? ABSOLUTE(__NVMECCInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__NVMInterrupt)    ? ABSOLUTE(__NVMInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__NVMCRCInterrupt)    ? ABSOLUTE(__NVMCRCInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt8)    ? ABSOLUTE(__Interrupt8)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLKFInterrupt)    ? ABSOLUTE(__CLKFInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLKEInterrupt)    ? ABSOLUTE(__CLKEInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK1FInterrupt)    ? ABSOLUTE(__CLK1FInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK1WInterrupt)    ? ABSOLUTE(__CLK1WInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK1MInterrupt)    ? ABSOLUTE(__CLK1MInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK1RInterrupt)    ? ABSOLUTE(__CLK1RInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK2FInterrupt)    ? ABSOLUTE(__CLK2FInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK2WInterrupt)    ? ABSOLUTE(__CLK2WInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK2MInterrupt)    ? ABSOLUTE(__CLK2MInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK2RInterrupt)    ? ABSOLUTE(__CLK2RInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK3FInterrupt)    ? ABSOLUTE(__CLK3FInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK3WInterrupt)    ? ABSOLUTE(__CLK3WInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK3MInterrupt)    ? ABSOLUTE(__CLK3MInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK3RInterrupt)    ? ABSOLUTE(__CLK3RInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK4FInterrupt)    ? ABSOLUTE(__CLK4FInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK4WInterrupt)    ? ABSOLUTE(__CLK4WInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK4MInterrupt)    ? ABSOLUTE(__CLK4MInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLK4RInterrupt)    ? ABSOLUTE(__CLK4RInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt27)    ? ABSOLUTE(__Interrupt27)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__WDTInterrupt)    ? ABSOLUTE(__WDTInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt29)    ? ABSOLUTE(__Interrupt29)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt30)    ? ABSOLUTE(__Interrupt30)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt31)    ? ABSOLUTE(__Interrupt31)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt32)    ? ABSOLUTE(__Interrupt32)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__INT0Interrupt)    ? ABSOLUTE(__INT0Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__INT1Interrupt)    ? ABSOLUTE(__INT1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__INT2Interrupt)    ? ABSOLUTE(__INT2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__INT3Interrupt)    ? ABSOLUTE(__INT3Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__INT4Interrupt)    ? ABSOLUTE(__INT4Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PEVTAInterrupt)    ? ABSOLUTE(__PEVTAInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PEVTBInterrupt)    ? ABSOLUTE(__PEVTBInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PEVTCInterrupt)    ? ABSOLUTE(__PEVTCInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PEVTDInterrupt)    ? ABSOLUTE(__PEVTDInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PEVTEInterrupt)    ? ABSOLUTE(__PEVTEInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PEVTFInterrupt)    ? ABSOLUTE(__PEVTFInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PWM1Interrupt)    ? ABSOLUTE(__PWM1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PWM2Interrupt)    ? ABSOLUTE(__PWM2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PWM3Interrupt)    ? ABSOLUTE(__PWM3Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PWM4Interrupt)    ? ABSOLUTE(__PWM4Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__T1Interrupt)    ? ABSOLUTE(__T1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CCT1Interrupt)    ? ABSOLUTE(__CCT1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CCP1Interrupt)    ? ABSOLUTE(__CCP1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CCT2Interrupt)    ? ABSOLUTE(__CCT2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CCP2Interrupt)    ? ABSOLUTE(__CCP2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CCT3Interrupt)    ? ABSOLUTE(__CCT3Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CCP3Interrupt)    ? ABSOLUTE(__CCP3Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CCT4Interrupt)    ? ABSOLUTE(__CCT4Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CCP4Interrupt)    ? ABSOLUTE(__CCP4Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt57)    ? ABSOLUTE(__Interrupt57)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt58)    ? ABSOLUTE(__Interrupt58)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt59)    ? ABSOLUTE(__Interrupt59)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt60)    ? ABSOLUTE(__Interrupt60)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt61)    ? ABSOLUTE(__Interrupt61)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt62)    ? ABSOLUTE(__Interrupt62)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__SPI1RXInterrupt)    ? ABSOLUTE(__SPI1RXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__SPI1TXInterrupt)    ? ABSOLUTE(__SPI1TXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__SPI1EInterrupt)    ? ABSOLUTE(__SPI1EInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__SPI2RXInterrupt)    ? ABSOLUTE(__SPI2RXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__SPI2TXInterrupt)    ? ABSOLUTE(__SPI2TXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__SPI2EInterrupt)    ? ABSOLUTE(__SPI2EInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__SPI3RXInterrupt)    ? ABSOLUTE(__SPI3RXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__SPI3TXInterrupt)    ? ABSOLUTE(__SPI3TXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__SPI3EInterrupt)    ? ABSOLUTE(__SPI3EInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__DMA0Interrupt)    ? ABSOLUTE(__DMA0Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__DMA1Interrupt)    ? ABSOLUTE(__DMA1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__DMA2Interrupt)    ? ABSOLUTE(__DMA2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__DMA3Interrupt)    ? ABSOLUTE(__DMA3Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CMP1Interrupt)    ? ABSOLUTE(__CMP1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CMP2Interrupt)    ? ABSOLUTE(__CMP2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CMP3Interrupt)    ? ABSOLUTE(__CMP3Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt79)    ? ABSOLUTE(__Interrupt79)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__I2C1EInterrupt)    ? ABSOLUTE(__I2C1EInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__I2C1Interrupt)    ? ABSOLUTE(__I2C1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__I2C1RXInterrupt)    ? ABSOLUTE(__I2C1RXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__I2C1TXInterrupt)    ? ABSOLUTE(__I2C1TXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__I2C2EInterrupt)    ? ABSOLUTE(__I2C2EInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__I2C2Interrupt)    ? ABSOLUTE(__I2C2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__I2C2RXInterrupt)    ? ABSOLUTE(__I2C2RXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__I2C2TXInterrupt)    ? ABSOLUTE(__I2C2TXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt88)    ? ABSOLUTE(__Interrupt88)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__U1RXInterrupt)    ? ABSOLUTE(__U1RXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__U1TXInterrupt)    ? ABSOLUTE(__U1TXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__U1EInterrupt)    ? ABSOLUTE(__U1EInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__U1EVTInterrupt)    ? ABSOLUTE(__U1EVTInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__U2RXInterrupt)    ? ABSOLUTE(__U2RXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__U2TXInterrupt)    ? ABSOLUTE(__U2TXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__U2EInterrupt)    ? ABSOLUTE(__U2EInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__U2EVTInterrupt)    ? ABSOLUTE(__U2EVTInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__U3RXInterrupt)    ? ABSOLUTE(__U3RXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__U3TXInterrupt)    ? ABSOLUTE(__U3TXInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__U3EInterrupt)    ? ABSOLUTE(__U3EInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__U3EVTInterrupt)    ? ABSOLUTE(__U3EVTInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt101)    ? ABSOLUTE(__Interrupt101)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt102)    ? ABSOLUTE(__Interrupt102)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt103)    ? ABSOLUTE(__Interrupt103)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt104)    ? ABSOLUTE(__Interrupt104)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__SENT1Interrupt)    ? ABSOLUTE(__SENT1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__SENT1EInterrupt)    ? ABSOLUTE(__SENT1EInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__SENT2Interrupt)    ? ABSOLUTE(__SENT2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__SENT2EInterrupt)    ? ABSOLUTE(__SENT2EInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__DMA4Interrupt)    ? ABSOLUTE(__DMA4Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__DMA5Interrupt)    ? ABSOLUTE(__DMA5Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt111)    ? ABSOLUTE(__Interrupt111)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt112)    ? ABSOLUTE(__Interrupt112)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CNAInterrupt)    ? ABSOLUTE(__CNAInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CNBInterrupt)    ? ABSOLUTE(__CNBInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CNCInterrupt)    ? ABSOLUTE(__CNCInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CNDInterrupt)    ? ABSOLUTE(__CNDInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt117)    ? ABSOLUTE(__Interrupt117)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt118)    ? ABSOLUTE(__Interrupt118)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt119)    ? ABSOLUTE(__Interrupt119)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt120)    ? ABSOLUTE(__Interrupt120)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt121)    ? ABSOLUTE(__Interrupt121)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt122)    ? ABSOLUTE(__Interrupt122)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt123)    ? ABSOLUTE(__Interrupt123)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt124)    ? ABSOLUTE(__Interrupt124)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__QEI1Interrupt)    ? ABSOLUTE(__QEI1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt126)    ? ABSOLUTE(__Interrupt126)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt127)    ? ABSOLUTE(__Interrupt127)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt128)    ? ABSOLUTE(__Interrupt128)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__BISS1EInterrupt)    ? ABSOLUTE(__BISS1EInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__BISS1Interrupt)    ? ABSOLUTE(__BISS1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CRCInterrupt)    ? ABSOLUTE(__CRCInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt132)    ? ABSOLUTE(__Interrupt132)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt133)    ? ABSOLUTE(__Interrupt133)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PTGSTEPInterrupt)    ? ABSOLUTE(__PTGSTEPInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PTGWDTInterrupt)    ? ABSOLUTE(__PTGWDTInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PTG0Interrupt)    ? ABSOLUTE(__PTG0Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PTG1Interrupt)    ? ABSOLUTE(__PTG1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PTG2Interrupt)    ? ABSOLUTE(__PTG2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__PTG3Interrupt)    ? ABSOLUTE(__PTG3Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt140)    ? ABSOLUTE(__Interrupt140)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt141)    ? ABSOLUTE(__Interrupt141)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt142)    ? ABSOLUTE(__Interrupt142)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt143)    ? ABSOLUTE(__Interrupt143)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt144)    ? ABSOLUTE(__Interrupt144)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt145)    ? ABSOLUTE(__Interrupt145)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH0Interrupt)    ? ABSOLUTE(__AD1CH0Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP0Interrupt)    ? ABSOLUTE(__AD1CMP0Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH1Interrupt)    ? ABSOLUTE(__AD1CH1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP1Interrupt)    ? ABSOLUTE(__AD1CMP1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH2Interrupt)    ? ABSOLUTE(__AD1CH2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP2Interrupt)    ? ABSOLUTE(__AD1CMP2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH3Interrupt)    ? ABSOLUTE(__AD1CH3Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP3Interrupt)    ? ABSOLUTE(__AD1CMP3Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH4Interrupt)    ? ABSOLUTE(__AD1CH4Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP4Interrupt)    ? ABSOLUTE(__AD1CMP4Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH5Interrupt)    ? ABSOLUTE(__AD1CH5Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP5Interrupt)    ? ABSOLUTE(__AD1CMP5Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH6Interrupt)    ? ABSOLUTE(__AD1CH6Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP6Interrupt)    ? ABSOLUTE(__AD1CMP6Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH7Interrupt)    ? ABSOLUTE(__AD1CH7Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP7Interrupt)    ? ABSOLUTE(__AD1CMP7Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH8Interrupt)    ? ABSOLUTE(__AD1CH8Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP8Interrupt)    ? ABSOLUTE(__AD1CMP8Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH9Interrupt)    ? ABSOLUTE(__AD1CH9Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP9Interrupt)    ? ABSOLUTE(__AD1CMP9Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH10Interrupt)    ? ABSOLUTE(__AD1CH10Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP10Interrupt)    ? ABSOLUTE(__AD1CMP10Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH11Interrupt)    ? ABSOLUTE(__AD1CH11Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP11Interrupt)    ? ABSOLUTE(__AD1CMP11Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH12Interrupt)    ? ABSOLUTE(__AD1CH12Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP12Interrupt)    ? ABSOLUTE(__AD1CMP12Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH13Interrupt)    ? ABSOLUTE(__AD1CH13Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP13Interrupt)    ? ABSOLUTE(__AD1CMP13Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH14Interrupt)    ? ABSOLUTE(__AD1CH14Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP14Interrupt)    ? ABSOLUTE(__AD1CMP14Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH15Interrupt)    ? ABSOLUTE(__AD1CH15Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP15Interrupt)    ? ABSOLUTE(__AD1CMP15Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH16Interrupt)    ? ABSOLUTE(__AD1CH16Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP16Interrupt)    ? ABSOLUTE(__AD1CMP16Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH17Interrupt)    ? ABSOLUTE(__AD1CH17Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP17Interrupt)    ? ABSOLUTE(__AD1CMP17Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH18Interrupt)    ? ABSOLUTE(__AD1CH18Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP18Interrupt)    ? ABSOLUTE(__AD1CMP18Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CH19Interrupt)    ? ABSOLUTE(__AD1CH19Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD1CMP19Interrupt)    ? ABSOLUTE(__AD1CMP19Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt186)    ? ABSOLUTE(__Interrupt186)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt187)    ? ABSOLUTE(__Interrupt187)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH0Interrupt)    ? ABSOLUTE(__AD2CH0Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP0Interrupt)    ? ABSOLUTE(__AD2CMP0Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH1Interrupt)    ? ABSOLUTE(__AD2CH1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP1Interrupt)    ? ABSOLUTE(__AD2CMP1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH2Interrupt)    ? ABSOLUTE(__AD2CH2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP2Interrupt)    ? ABSOLUTE(__AD2CMP2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH3Interrupt)    ? ABSOLUTE(__AD2CH3Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP3Interrupt)    ? ABSOLUTE(__AD2CMP3Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH4Interrupt)    ? ABSOLUTE(__AD2CH4Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP4Interrupt)    ? ABSOLUTE(__AD2CMP4Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH5Interrupt)    ? ABSOLUTE(__AD2CH5Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP5Interrupt)    ? ABSOLUTE(__AD2CMP5Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH6Interrupt)    ? ABSOLUTE(__AD2CH6Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP6Interrupt)    ? ABSOLUTE(__AD2CMP6Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH7Interrupt)    ? ABSOLUTE(__AD2CH7Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP7Interrupt)    ? ABSOLUTE(__AD2CMP7Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH8Interrupt)    ? ABSOLUTE(__AD2CH8Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP8Interrupt)    ? ABSOLUTE(__AD2CMP8Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH9Interrupt)    ? ABSOLUTE(__AD2CH9Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP9Interrupt)    ? ABSOLUTE(__AD2CMP9Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH10Interrupt)    ? ABSOLUTE(__AD2CH10Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP10Interrupt)    ? ABSOLUTE(__AD2CMP10Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH11Interrupt)    ? ABSOLUTE(__AD2CH11Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP11Interrupt)    ? ABSOLUTE(__AD2CMP11Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH12Interrupt)    ? ABSOLUTE(__AD2CH12Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP12Interrupt)    ? ABSOLUTE(__AD2CMP12Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH13Interrupt)    ? ABSOLUTE(__AD2CH13Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP13Interrupt)    ? ABSOLUTE(__AD2CMP13Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH14Interrupt)    ? ABSOLUTE(__AD2CH14Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP14Interrupt)    ? ABSOLUTE(__AD2CMP14Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH15Interrupt)    ? ABSOLUTE(__AD2CH15Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP15Interrupt)    ? ABSOLUTE(__AD2CMP15Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH16Interrupt)    ? ABSOLUTE(__AD2CH16Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP16Interrupt)    ? ABSOLUTE(__AD2CMP16Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH17Interrupt)    ? ABSOLUTE(__AD2CH17Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP17Interrupt)    ? ABSOLUTE(__AD2CMP17Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH18Interrupt)    ? ABSOLUTE(__AD2CH18Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP18Interrupt)    ? ABSOLUTE(__AD2CMP18Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CH19Interrupt)    ? ABSOLUTE(__AD2CH19Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__AD2CMP19Interrupt)    ? ABSOLUTE(__AD2CMP19Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt228)    ? ABSOLUTE(__Interrupt228)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt229)    ? ABSOLUTE(__Interrupt229)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt230)    ? ABSOLUTE(__Interrupt230)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt231)    ? ABSOLUTE(__Interrupt231)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLC1PInterrupt)    ? ABSOLUTE(__CLC1PInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLC1NInterrupt)    ? ABSOLUTE(__CLC1NInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLC2PInterrupt)    ? ABSOLUTE(__CLC2PInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLC2NInterrupt)    ? ABSOLUTE(__CLC2NInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLC3PInterrupt)    ? ABSOLUTE(__CLC3PInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLC3NInterrupt)    ? ABSOLUTE(__CLC3NInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLC4PInterrupt)    ? ABSOLUTE(__CLC4PInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__CLC4NInterrupt)    ? ABSOLUTE(__CLC4NInterrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt240)    ? ABSOLUTE(__Interrupt240)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt241)    ? ABSOLUTE(__Interrupt241)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt242)    ? ABSOLUTE(__Interrupt242)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt243)    ? ABSOLUTE(__Interrupt243)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt244)    ? ABSOLUTE(__Interrupt244)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt245)    ? ABSOLUTE(__Interrupt245)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt246)    ? ABSOLUTE(__Interrupt246)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt247)    ? ABSOLUTE(__Interrupt247)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt248)    ? ABSOLUTE(__Interrupt248)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt249)    ? ABSOLUTE(__Interrupt249)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt250)    ? ABSOLUTE(__Interrupt250)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt251)    ? ABSOLUTE(__Interrupt251)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt252)    ? ABSOLUTE(__Interrupt252)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt253)    ? ABSOLUTE(__Interrupt253)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt254)    ? ABSOLUTE(__Interrupt254)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt255)    ? ABSOLUTE(__Interrupt255)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt256)    ? ABSOLUTE(__Interrupt256)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt257)    ? ABSOLUTE(__Interrupt257)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt258)    ? ABSOLUTE(__Interrupt258)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt259)    ? ABSOLUTE(__Interrupt259)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt260)    ? ABSOLUTE(__Interrupt260)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt261)    ? ABSOLUTE(__Interrupt261)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt262)    ? ABSOLUTE(__Interrupt262)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt263)    ? ABSOLUTE(__Interrupt263)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt264)    ? ABSOLUTE(__Interrupt264)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt265)    ? ABSOLUTE(__Interrupt265)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt266)    ? ABSOLUTE(__Interrupt266)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt267)    ? ABSOLUTE(__Interrupt267)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt268)    ? ABSOLUTE(__Interrupt268)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt269)    ? ABSOLUTE(__Interrupt269)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt270)    ? ABSOLUTE(__Interrupt270)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt271)    ? ABSOLUTE(__Interrupt271)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt272)    ? ABSOLUTE(__Interrupt272)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt273)    ? ABSOLUTE(__Interrupt273)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__Interrupt274)    ? ABSOLUTE(__Interrupt274)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__IOIM1Interrupt)    ? ABSOLUTE(__IOIM1Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__IOIM2Interrupt)    ? ABSOLUTE(__IOIM2Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__IOIM3Interrupt)    ? ABSOLUTE(__IOIM3Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
    LONG( DEFINED(__IOIM4Interrupt)    ? ABSOLUTE(__IOIM4Interrupt)    :
         ABSOLUTE(__DefaultInterrupt));
  } >ivt
} /* SECTIONS */
#endif


/*
** ============== Equates for SFR Addresses =============
*/

 PC           = 0x0;
_PC           = 0x0;
_PCbits       = 0x0;
 SPLIM        = 0x4;
_SPLIM        = 0x4;
_SPLIMbits    = 0x4;
 RCOUNT       = 0x8;
_RCOUNT       = 0x8;
 DISIIPL      = 0xC;
_DISIIPL      = 0xC;
_DISIIPLbits  = 0xC;
 CORCON       = 0x10;
_CORCON       = 0x10;
_CORCONbits   = 0x10;
 MODCON       = 0x14;
_MODCON       = 0x14;
_MODCONbits   = 0x14;
 XMODSRT      = 0x18;
_XMODSRT      = 0x18;
_XMODSRTbits  = 0x18;
 XMODEND      = 0x1C;
_XMODEND      = 0x1C;
_XMODENDbits  = 0x1C;
 YMODSRT      = 0x20;
_YMODSRT      = 0x20;
_YMODSRTbits  = 0x20;
 YMODEND      = 0x24;
_YMODEND      = 0x24;
_YMODENDbits  = 0x24;
 XBREV        = 0x28;
_XBREV        = 0x28;
_XBREVbits    = 0x28;
 PCTRAP       = 0x2C;
_PCTRAP       = 0x2C;
_PCTRAPbits   = 0x2C;
 FEX          = 0x30;
_FEX          = 0x30;
 FEX2         = 0x34;
_FEX2         = 0x34;
 PCHOLD       = 0x38;
_PCHOLD       = 0x38;
_PCHOLDbits   = 0x38;
 VFA          = 0x3C;
_VFA          = 0x3C;
_VFAbits      = 0x3C;
 INTCON1      = 0x70;
_INTCON1      = 0x70;
_INTCON1bits  = 0x70;
 INTCON2      = 0x74;
_INTCON2      = 0x74;
_INTCON2bits  = 0x74;
 INTCON3      = 0x78;
_INTCON3      = 0x78;
_INTCON3bits  = 0x78;
 INTCON4      = 0x7C;
_INTCON4      = 0x7C;
_INTCON4bits  = 0x7C;
 INTCON5      = 0x80;
_INTCON5      = 0x80;
_INTCON5bits  = 0x80;
 INTTREG      = 0x84;
_INTTREG      = 0x84;
_INTTREGbits  = 0x84;
 IVTBASE      = 0x88;
_IVTBASE      = 0x88;
 IVTCREG      = 0x8C;
_IVTCREG      = 0x8C;
_IVTCREGbits  = 0x8C;
 IFS0         = 0x90;
_IFS0         = 0x90;
_IFS0bits     = 0x90;
 IFS1         = 0x94;
_IFS1         = 0x94;
_IFS1bits     = 0x94;
 IFS2         = 0x98;
_IFS2         = 0x98;
_IFS2bits     = 0x98;
 IFS3         = 0x9C;
_IFS3         = 0x9C;
_IFS3bits     = 0x9C;
 IFS4         = 0xA0;
_IFS4         = 0xA0;
_IFS4bits     = 0xA0;
 IFS5         = 0xA4;
_IFS5         = 0xA4;
_IFS5bits     = 0xA4;
 IFS6         = 0xA8;
_IFS6         = 0xA8;
_IFS6bits     = 0xA8;
 IFS7         = 0xAC;
_IFS7         = 0xAC;
_IFS7bits     = 0xAC;
 IFS8         = 0xB0;
_IFS8         = 0xB0;
_IFS8bits     = 0xB0;
 IEC0         = 0xB4;
_IEC0         = 0xB4;
_IEC0bits     = 0xB4;
 IEC1         = 0xB8;
_IEC1         = 0xB8;
_IEC1bits     = 0xB8;
 IEC2         = 0xBC;
_IEC2         = 0xBC;
_IEC2bits     = 0xBC;
 IEC3         = 0xC0;
_IEC3         = 0xC0;
_IEC3bits     = 0xC0;
 IEC4         = 0xC4;
_IEC4         = 0xC4;
_IEC4bits     = 0xC4;
 IEC5         = 0xC8;
_IEC5         = 0xC8;
_IEC5bits     = 0xC8;
 IEC6         = 0xCC;
_IEC6         = 0xCC;
_IEC6bits     = 0xCC;
 IEC7         = 0xD0;
_IEC7         = 0xD0;
_IEC7bits     = 0xD0;
 IEC8         = 0xD4;
_IEC8         = 0xD4;
_IEC8bits     = 0xD4;
 IPC0         = 0xD8;
_IPC0         = 0xD8;
_IPC0bits     = 0xD8;
 IPC1         = 0xDC;
_IPC1         = 0xDC;
_IPC1bits     = 0xDC;
 IPC2         = 0xE0;
_IPC2         = 0xE0;
_IPC2bits     = 0xE0;
 IPC3         = 0xE4;
_IPC3         = 0xE4;
_IPC3bits     = 0xE4;
 IPC4         = 0xE8;
_IPC4         = 0xE8;
_IPC4bits     = 0xE8;
 IPC5         = 0xEC;
_IPC5         = 0xEC;
_IPC5bits     = 0xEC;
 IPC6         = 0xF0;
_IPC6         = 0xF0;
_IPC6bits     = 0xF0;
 IPC7         = 0xF4;
_IPC7         = 0xF4;
_IPC7bits     = 0xF4;
 IPC8         = 0xF8;
_IPC8         = 0xF8;
_IPC8bits     = 0xF8;
 IPC9         = 0xFC;
_IPC9         = 0xFC;
_IPC9bits     = 0xFC;
 IPC10        = 0x100;
_IPC10        = 0x100;
_IPC10bits    = 0x100;
 IPC11        = 0x104;
_IPC11        = 0x104;
_IPC11bits    = 0x104;
 IPC12        = 0x108;
_IPC12        = 0x108;
_IPC12bits    = 0x108;
 IPC13        = 0x10C;
_IPC13        = 0x10C;
_IPC13bits    = 0x10C;
 IPC14        = 0x110;
_IPC14        = 0x110;
_IPC14bits    = 0x110;
 IPC15        = 0x114;
_IPC15        = 0x114;
_IPC15bits    = 0x114;
 IPC16        = 0x118;
_IPC16        = 0x118;
_IPC16bits    = 0x118;
 IPC17        = 0x11C;
_IPC17        = 0x11C;
_IPC17bits    = 0x11C;
 IPC18        = 0x120;
_IPC18        = 0x120;
_IPC18bits    = 0x120;
 IPC19        = 0x124;
_IPC19        = 0x124;
_IPC19bits    = 0x124;
 IPC20        = 0x128;
_IPC20        = 0x128;
_IPC20bits    = 0x128;
 IPC21        = 0x12C;
_IPC21        = 0x12C;
_IPC21bits    = 0x12C;
 IPC22        = 0x130;
_IPC22        = 0x130;
_IPC22bits    = 0x130;
 IPC23        = 0x134;
_IPC23        = 0x134;
_IPC23bits    = 0x134;
 IPC24        = 0x138;
_IPC24        = 0x138;
_IPC24bits    = 0x138;
 IPC25        = 0x13C;
_IPC25        = 0x13C;
_IPC25bits    = 0x13C;
 IPC26        = 0x140;
_IPC26        = 0x140;
_IPC26bits    = 0x140;
 IPC27        = 0x144;
_IPC27        = 0x144;
_IPC27bits    = 0x144;
 IPC28        = 0x148;
_IPC28        = 0x148;
_IPC28bits    = 0x148;
 IPC29        = 0x14C;
_IPC29        = 0x14C;
_IPC29bits    = 0x14C;
 IPC35        = 0x160;
_IPC35        = 0x160;
_IPC35bits    = 0x160;
 PORTA        = 0x200;
_PORTA        = 0x200;
_PORTAbits    = 0x200;
 LATA         = 0x204;
_LATA         = 0x204;
_LATAbits     = 0x204;
 TRISA        = 0x208;
_TRISA        = 0x208;
_TRISAbits    = 0x208;
 CNSTATA      = 0x20C;
_CNSTATA      = 0x20C;
_CNSTATAbits  = 0x20C;
 CNFA         = 0x210;
_CNFA         = 0x210;
_CNFAbits     = 0x210;
 PORTB        = 0x214;
_PORTB        = 0x214;
_PORTBbits    = 0x214;
 LATB         = 0x218;
_LATB         = 0x218;
_LATBbits     = 0x218;
 TRISB        = 0x21C;
_TRISB        = 0x21C;
_TRISBbits    = 0x21C;
 CNSTATB      = 0x220;
_CNSTATB      = 0x220;
_CNSTATBbits  = 0x220;
 CNFB         = 0x224;
_CNFB         = 0x224;
_CNFBbits     = 0x224;
 PORTC        = 0x228;
_PORTC        = 0x228;
_PORTCbits    = 0x228;
 LATC         = 0x22C;
_LATC         = 0x22C;
_LATCbits     = 0x22C;
 TRISC        = 0x230;
_TRISC        = 0x230;
_TRISCbits    = 0x230;
 CNSTATC      = 0x234;
_CNSTATC      = 0x234;
_CNSTATCbits  = 0x234;
 CNFC         = 0x238;
_CNFC         = 0x238;
_CNFCbits     = 0x238;
 PORTD        = 0x23C;
_PORTD        = 0x23C;
_PORTDbits    = 0x23C;
 LATD         = 0x240;
_LATD         = 0x240;
_LATDbits     = 0x240;
 TRISD        = 0x244;
_TRISD        = 0x244;
_TRISDbits    = 0x244;
 CNSTATD      = 0x248;
_CNSTATD      = 0x248;
_CNSTATDbits  = 0x248;
 CNFD         = 0x24C;
_CNFD         = 0x24C;
_CNFDbits     = 0x24C;
 CRCCON       = 0x2C8;
_CRCCON       = 0x2C8;
_CRCCONbits   = 0x2C8;
 CRCXOR       = 0x2CC;
_CRCXOR       = 0x2CC;
_CRCXORbits   = 0x2CC;
 CRCDAT       = 0x2D0;
_CRCDAT       = 0x2D0;
 CRCWDAT      = 0x2D4;
_CRCWDAT      = 0x2D4;
 UCPROT       = 0x2E0;
_UCPROT       = 0x2E0;
_UCPROTbits   = 0x2E0;
 IRTCTRL      = 0x2E4;
_IRTCTRL      = 0x2E4;
_IRTCTRLbits  = 0x2E4;
 IRTSTAT      = 0x2E8;
_IRTSTAT      = 0x2E8;
 PR0CTRL      = 0x300;
_PR0CTRL      = 0x300;
_PR0CTRLbits  = 0x300;
 PR0ST        = 0x304;
_PR0ST        = 0x304;
_PR0STbits    = 0x304;
 PR0END       = 0x308;
_PR0END       = 0x308;
_PR0ENDbits   = 0x308;
 PR0LOCK      = 0x30C;
_PR0LOCK      = 0x30C;
_PR0LOCKbits  = 0x30C;
 PR1CTRL      = 0x310;
_PR1CTRL      = 0x310;
_PR1CTRLbits  = 0x310;
 PR1ST        = 0x314;
_PR1ST        = 0x314;
_PR1STbits    = 0x314;
 PR1END       = 0x318;
_PR1END       = 0x318;
_PR1ENDbits   = 0x318;
 PR1LOCK      = 0x31C;
_PR1LOCK      = 0x31C;
_PR1LOCKbits  = 0x31C;
 PR2CTRL      = 0x320;
_PR2CTRL      = 0x320;
_PR2CTRLbits  = 0x320;
 PR2ST        = 0x324;
_PR2ST        = 0x324;
_PR2STbits    = 0x324;
 PR2END       = 0x328;
_PR2END       = 0x328;
_PR2ENDbits   = 0x328;
 PR2LOCK      = 0x32C;
_PR2LOCK      = 0x32C;
_PR2LOCKbits  = 0x32C;
 PR3CTRL      = 0x330;
_PR3CTRL      = 0x330;
_PR3CTRLbits  = 0x330;
 PR3ST        = 0x334;
_PR3ST        = 0x334;
_PR3STbits    = 0x334;
 PR3END       = 0x338;
_PR3END       = 0x338;
_PR3ENDbits   = 0x338;
 PR3LOCK      = 0x33C;
_PR3LOCK      = 0x33C;
_PR3LOCKbits  = 0x33C;
 PR4CTRL      = 0x340;
_PR4CTRL      = 0x340;
_PR4CTRLbits  = 0x340;
 PR4ST        = 0x344;
_PR4ST        = 0x344;
_PR4STbits    = 0x344;
 PR4END       = 0x348;
_PR4END       = 0x348;
_PR4ENDbits   = 0x348;
 PR4LOCK      = 0x34C;
_PR4LOCK      = 0x34C;
_PR4LOCKbits  = 0x34C;
 PR5CTRL      = 0x350;
_PR5CTRL      = 0x350;
_PR5CTRLbits  = 0x350;
 PR5ST        = 0x354;
_PR5ST        = 0x354;
_PR5STbits    = 0x354;
 PR5END       = 0x358;
_PR5END       = 0x358;
_PR5ENDbits   = 0x358;
 PR5LOCK      = 0x35C;
_PR5LOCK      = 0x35C;
_PR5LOCKbits  = 0x35C;
 PR6CTRL      = 0x360;
_PR6CTRL      = 0x360;
_PR6CTRLbits  = 0x360;
 PR6ST        = 0x364;
_PR6ST        = 0x364;
_PR6STbits    = 0x364;
 PR6END       = 0x368;
_PR6END       = 0x368;
_PR6ENDbits   = 0x368;
 PR6LOCK      = 0x36C;
_PR6LOCK      = 0x36C;
_PR6LOCKbits  = 0x36C;
 PR7CTRL      = 0x370;
_PR7CTRL      = 0x370;
_PR7CTRLbits  = 0x370;
 PR7ST        = 0x374;
_PR7ST        = 0x374;
_PR7STbits    = 0x374;
 PR7END       = 0x378;
_PR7END       = 0x378;
_PR7ENDbits   = 0x378;
 PR7LOCK      = 0x37C;
_PR7LOCK      = 0x37C;
_PR7LOCKbits  = 0x37C;
 BMXINITPR    = 0x770;
_BMXINITPR    = 0x770;
_BMXINITPRbits = 0x770;
 BMXIRAML     = 0x774;
_BMXIRAML     = 0x774;
 BMXIRAMH     = 0x778;
_BMXIRAMH     = 0x778;
 BMXXDATERR   = 0x77C;
_BMXXDATERR   = 0x77C;
_BMXXDATERRbits = 0x77C;
 BMXYDATERR   = 0x780;
_BMXYDATERR   = 0x780;
_BMXYDATERRbits = 0x780;
 BMXDMAERR    = 0x784;
_BMXDMAERR    = 0x784;
_BMXDMAERRbits = 0x784;
 BMXCPUERR    = 0x788;
_BMXCPUERR    = 0x788;
_BMXCPUERRbits = 0x788;
 BMXNVMERR    = 0x78C;
_BMXNVMERR    = 0x78C;
_BMXNVMERRbits = 0x78C;
 BMXICDERR    = 0x790;
_BMXICDERR    = 0x790;
_BMXICDERRbits = 0x790;
 AD1CON       = 0x800;
_AD1CON       = 0x800;
_AD1CONbits   = 0x800;
 AD1DATAOVR   = 0x804;
_AD1DATAOVR   = 0x804;
 AD1STAT      = 0x808;
_AD1STAT      = 0x808;
_AD1STATbits  = 0x808;
 AD1CMPSTAT   = 0x80C;
_AD1CMPSTAT   = 0x80C;
_AD1CMPSTATbits = 0x80C;
 AD1SWTRG     = 0x810;
_AD1SWTRG     = 0x810;
_AD1SWTRGbits = 0x810;
 AD1CH0CON    = 0x814;
_AD1CH0CON    = 0x814;
_AD1CH0CONbits = 0x814;
 AD1CH0DATA   = 0x818;
_AD1CH0DATA   = 0x818;
 AD1CH0CNT    = 0x81C;
_AD1CH0CNT    = 0x81C;
_AD1CH0CNTbits = 0x81C;
 AD1CH0CMPLO  = 0x820;
_AD1CH0CMPLO  = 0x820;
 AD1CH0CMPHI  = 0x824;
_AD1CH0CMPHI  = 0x824;
 AD1CH0ACC    = 0x828;
_AD1CH0ACC    = 0x828;
 AD1CH1CON    = 0x82C;
_AD1CH1CON    = 0x82C;
_AD1CH1CONbits = 0x82C;
 AD1CH1DATA   = 0x830;
_AD1CH1DATA   = 0x830;
 AD1CH1CNT    = 0x834;
_AD1CH1CNT    = 0x834;
_AD1CH1CNTbits = 0x834;
 AD1CH1CMPLO  = 0x838;
_AD1CH1CMPLO  = 0x838;
 AD1CH1CMPHI  = 0x83C;
_AD1CH1CMPHI  = 0x83C;
 AD1CH1ACC    = 0x840;
_AD1CH1ACC    = 0x840;
 AD1CH2CON    = 0x844;
_AD1CH2CON    = 0x844;
_AD1CH2CONbits = 0x844;
 AD1CH2DATA   = 0x848;
_AD1CH2DATA   = 0x848;
 AD1CH2CNT    = 0x84C;
_AD1CH2CNT    = 0x84C;
_AD1CH2CNTbits = 0x84C;
 AD1CH2CMPLO  = 0x850;
_AD1CH2CMPLO  = 0x850;
 AD1CH2CMPHI  = 0x854;
_AD1CH2CMPHI  = 0x854;
 AD1CH2ACC    = 0x858;
_AD1CH2ACC    = 0x858;
 AD1CH3CON    = 0x85C;
_AD1CH3CON    = 0x85C;
_AD1CH3CONbits = 0x85C;
 AD1CH3DATA   = 0x860;
_AD1CH3DATA   = 0x860;
 AD1CH3CNT    = 0x864;
_AD1CH3CNT    = 0x864;
_AD1CH3CNTbits = 0x864;
 AD1CH3CMPLO  = 0x868;
_AD1CH3CMPLO  = 0x868;
 AD1CH3CMPHI  = 0x86C;
_AD1CH3CMPHI  = 0x86C;
 AD1CH3ACC    = 0x870;
_AD1CH3ACC    = 0x870;
 AD1CH4CON    = 0x874;
_AD1CH4CON    = 0x874;
_AD1CH4CONbits = 0x874;
 AD1CH4DATA   = 0x878;
_AD1CH4DATA   = 0x878;
 AD1CH4CNT    = 0x87C;
_AD1CH4CNT    = 0x87C;
_AD1CH4CNTbits = 0x87C;
 AD1CH4CMPLO  = 0x880;
_AD1CH4CMPLO  = 0x880;
 AD1CH4CMPHI  = 0x884;
_AD1CH4CMPHI  = 0x884;
 AD1CH4ACC    = 0x888;
_AD1CH4ACC    = 0x888;
 AD1CH5CON    = 0x88C;
_AD1CH5CON    = 0x88C;
_AD1CH5CONbits = 0x88C;
 AD1CH5DATA   = 0x890;
_AD1CH5DATA   = 0x890;
 AD1CH5CNT    = 0x894;
_AD1CH5CNT    = 0x894;
_AD1CH5CNTbits = 0x894;
 AD1CH5CMPLO  = 0x898;
_AD1CH5CMPLO  = 0x898;
 AD1CH5CMPHI  = 0x89C;
_AD1CH5CMPHI  = 0x89C;
 AD1CH5ACC    = 0x8A0;
_AD1CH5ACC    = 0x8A0;
 AD1CH6CON    = 0x8A4;
_AD1CH6CON    = 0x8A4;
_AD1CH6CONbits = 0x8A4;
 AD1CH6DATA   = 0x8A8;
_AD1CH6DATA   = 0x8A8;
 AD1CH6CNT    = 0x8AC;
_AD1CH6CNT    = 0x8AC;
_AD1CH6CNTbits = 0x8AC;
 AD1CH6CMPLO  = 0x8B0;
_AD1CH6CMPLO  = 0x8B0;
 AD1CH6CMPHI  = 0x8B4;
_AD1CH6CMPHI  = 0x8B4;
 AD1CH6ACC    = 0x8B8;
_AD1CH6ACC    = 0x8B8;
 AD1CH7CON    = 0x8BC;
_AD1CH7CON    = 0x8BC;
_AD1CH7CONbits = 0x8BC;
 AD1CH7DATA   = 0x8C0;
_AD1CH7DATA   = 0x8C0;
 AD1CH7CNT    = 0x8C4;
_AD1CH7CNT    = 0x8C4;
_AD1CH7CNTbits = 0x8C4;
 AD1CH7CMPLO  = 0x8C8;
_AD1CH7CMPLO  = 0x8C8;
 AD1CH7CMPHI  = 0x8CC;
_AD1CH7CMPHI  = 0x8CC;
 AD1CH7ACC    = 0x8D0;
_AD1CH7ACC    = 0x8D0;
 AD1CH8CON    = 0x8D4;
_AD1CH8CON    = 0x8D4;
_AD1CH8CONbits = 0x8D4;
 AD1CH8DATA   = 0x8D8;
_AD1CH8DATA   = 0x8D8;
 AD1CH8CNT    = 0x8DC;
_AD1CH8CNT    = 0x8DC;
_AD1CH8CNTbits = 0x8DC;
 AD1CH8CMPLO  = 0x8E0;
_AD1CH8CMPLO  = 0x8E0;
 AD1CH8CMPHI  = 0x8E4;
_AD1CH8CMPHI  = 0x8E4;
 AD1CH8ACC    = 0x8E8;
_AD1CH8ACC    = 0x8E8;
 AD1CH9CON    = 0x8EC;
_AD1CH9CON    = 0x8EC;
_AD1CH9CONbits = 0x8EC;
 AD1CH9DATA   = 0x8F0;
_AD1CH9DATA   = 0x8F0;
 AD1CH9CNT    = 0x8F4;
_AD1CH9CNT    = 0x8F4;
_AD1CH9CNTbits = 0x8F4;
 AD1CH9CMPLO  = 0x8F8;
_AD1CH9CMPLO  = 0x8F8;
 AD1CH9CMPHI  = 0x8FC;
_AD1CH9CMPHI  = 0x8FC;
 AD1CH9ACC    = 0x900;
_AD1CH9ACC    = 0x900;
 AD1CH10CON   = 0x904;
_AD1CH10CON   = 0x904;
_AD1CH10CONbits = 0x904;
 AD1CH10DATA  = 0x908;
_AD1CH10DATA  = 0x908;
 AD1CH10CNT   = 0x90C;
_AD1CH10CNT   = 0x90C;
_AD1CH10CNTbits = 0x90C;
 AD1CH10CMPLO = 0x910;
_AD1CH10CMPLO = 0x910;
 AD1CH10CMPHI = 0x914;
_AD1CH10CMPHI = 0x914;
 AD1CH10ACC   = 0x918;
_AD1CH10ACC   = 0x918;
 AD1CH11CON   = 0x91C;
_AD1CH11CON   = 0x91C;
_AD1CH11CONbits = 0x91C;
 AD1CH11DATA  = 0x920;
_AD1CH11DATA  = 0x920;
 AD1CH11CNT   = 0x924;
_AD1CH11CNT   = 0x924;
_AD1CH11CNTbits = 0x924;
 AD1CH11CMPLO = 0x928;
_AD1CH11CMPLO = 0x928;
 AD1CH11CMPHI = 0x92C;
_AD1CH11CMPHI = 0x92C;
 AD1CH11ACC   = 0x930;
_AD1CH11ACC   = 0x930;
 AD1CH12CON   = 0x934;
_AD1CH12CON   = 0x934;
_AD1CH12CONbits = 0x934;
 AD1CH12DATA  = 0x938;
_AD1CH12DATA  = 0x938;
 AD1CH12CNT   = 0x93C;
_AD1CH12CNT   = 0x93C;
_AD1CH12CNTbits = 0x93C;
 AD1CH12CMPLO = 0x940;
_AD1CH12CMPLO = 0x940;
 AD1CH12CMPHI = 0x944;
_AD1CH12CMPHI = 0x944;
 AD1CH12ACC   = 0x948;
_AD1CH12ACC   = 0x948;
 AD1CH13CON   = 0x94C;
_AD1CH13CON   = 0x94C;
_AD1CH13CONbits = 0x94C;
 AD1CH13DATA  = 0x950;
_AD1CH13DATA  = 0x950;
 AD1CH13CNT   = 0x954;
_AD1CH13CNT   = 0x954;
_AD1CH13CNTbits = 0x954;
 AD1CH13CMPLO = 0x958;
_AD1CH13CMPLO = 0x958;
 AD1CH13CMPHI = 0x95C;
_AD1CH13CMPHI = 0x95C;
 AD1CH13ACC   = 0x960;
_AD1CH13ACC   = 0x960;
 AD1CH14CON   = 0x964;
_AD1CH14CON   = 0x964;
_AD1CH14CONbits = 0x964;
 AD1CH14DATA  = 0x968;
_AD1CH14DATA  = 0x968;
 AD1CH14CNT   = 0x96C;
_AD1CH14CNT   = 0x96C;
_AD1CH14CNTbits = 0x96C;
 AD1CH14CMPLO = 0x970;
_AD1CH14CMPLO = 0x970;
 AD1CH14CMPHI = 0x974;
_AD1CH14CMPHI = 0x974;
 AD1CH14ACC   = 0x978;
_AD1CH14ACC   = 0x978;
 AD1CH15CON   = 0x97C;
_AD1CH15CON   = 0x97C;
_AD1CH15CONbits = 0x97C;
 AD1CH15DATA  = 0x980;
_AD1CH15DATA  = 0x980;
 AD1CH15CNT   = 0x984;
_AD1CH15CNT   = 0x984;
_AD1CH15CNTbits = 0x984;
 AD1CH15CMPLO = 0x988;
_AD1CH15CMPLO = 0x988;
 AD1CH15CMPHI = 0x98C;
_AD1CH15CMPHI = 0x98C;
 AD1CH15ACC   = 0x990;
_AD1CH15ACC   = 0x990;
 AD1CH16CON   = 0x994;
_AD1CH16CON   = 0x994;
_AD1CH16CONbits = 0x994;
 AD1CH16DATA  = 0x998;
_AD1CH16DATA  = 0x998;
 AD1CH16CNT   = 0x99C;
_AD1CH16CNT   = 0x99C;
_AD1CH16CNTbits = 0x99C;
 AD1CH16CMPLO = 0x9A0;
_AD1CH16CMPLO = 0x9A0;
 AD1CH16CMPHI = 0x9A4;
_AD1CH16CMPHI = 0x9A4;
 AD1CH16ACC   = 0x9A8;
_AD1CH16ACC   = 0x9A8;
 AD1CH17CON   = 0x9AC;
_AD1CH17CON   = 0x9AC;
_AD1CH17CONbits = 0x9AC;
 AD1CH17DATA  = 0x9B0;
_AD1CH17DATA  = 0x9B0;
 AD1CH17CNT   = 0x9B4;
_AD1CH17CNT   = 0x9B4;
_AD1CH17CNTbits = 0x9B4;
 AD1CH17CMPLO = 0x9B8;
_AD1CH17CMPLO = 0x9B8;
 AD1CH17CMPHI = 0x9BC;
_AD1CH17CMPHI = 0x9BC;
 AD1CH17ACC   = 0x9C0;
_AD1CH17ACC   = 0x9C0;
 AD1CH18CON   = 0x9C4;
_AD1CH18CON   = 0x9C4;
_AD1CH18CONbits = 0x9C4;
 AD1CH18DATA  = 0x9C8;
_AD1CH18DATA  = 0x9C8;
 AD1CH18CNT   = 0x9CC;
_AD1CH18CNT   = 0x9CC;
_AD1CH18CNTbits = 0x9CC;
 AD1CH18CMPLO = 0x9D0;
_AD1CH18CMPLO = 0x9D0;
 AD1CH18CMPHI = 0x9D4;
_AD1CH18CMPHI = 0x9D4;
 AD1CH18ACC   = 0x9D8;
_AD1CH18ACC   = 0x9D8;
 AD1CH19CON   = 0x9DC;
_AD1CH19CON   = 0x9DC;
_AD1CH19CONbits = 0x9DC;
 AD1CH19DATA  = 0x9E0;
_AD1CH19DATA  = 0x9E0;
 AD1CH19CNT   = 0x9E4;
_AD1CH19CNT   = 0x9E4;
_AD1CH19CNTbits = 0x9E4;
 AD1CH19CMPLO = 0x9E8;
_AD1CH19CMPLO = 0x9E8;
 AD1CH19CMPHI = 0x9EC;
_AD1CH19CMPHI = 0x9EC;
 AD1CH19ACC   = 0x9F0;
_AD1CH19ACC   = 0x9F0;
 AD2CON       = 0xA00;
_AD2CON       = 0xA00;
_AD2CONbits   = 0xA00;
 AD2DATAOVR   = 0xA04;
_AD2DATAOVR   = 0xA04;
 AD2STAT      = 0xA08;
_AD2STAT      = 0xA08;
_AD2STATbits  = 0xA08;
 AD2CMPSTAT   = 0xA0C;
_AD2CMPSTAT   = 0xA0C;
_AD2CMPSTATbits = 0xA0C;
 AD2SWTRG     = 0xA10;
_AD2SWTRG     = 0xA10;
_AD2SWTRGbits = 0xA10;
 AD2CH0CON    = 0xA14;
_AD2CH0CON    = 0xA14;
_AD2CH0CONbits = 0xA14;
 AD2CH0DATA   = 0xA18;
_AD2CH0DATA   = 0xA18;
 AD2CH0CNT    = 0xA1C;
_AD2CH0CNT    = 0xA1C;
_AD2CH0CNTbits = 0xA1C;
 AD2CH0CMPLO  = 0xA20;
_AD2CH0CMPLO  = 0xA20;
 AD2CH0CMPHI  = 0xA24;
_AD2CH0CMPHI  = 0xA24;
 AD2CH0ACC    = 0xA28;
_AD2CH0ACC    = 0xA28;
 AD2CH1CON    = 0xA2C;
_AD2CH1CON    = 0xA2C;
_AD2CH1CONbits = 0xA2C;
 AD2CH1DATA   = 0xA30;
_AD2CH1DATA   = 0xA30;
 AD2CH1CNT    = 0xA34;
_AD2CH1CNT    = 0xA34;
_AD2CH1CNTbits = 0xA34;
 AD2CH1CMPLO  = 0xA38;
_AD2CH1CMPLO  = 0xA38;
 AD2CH1CMPHI  = 0xA3C;
_AD2CH1CMPHI  = 0xA3C;
 AD2CH1ACC    = 0xA40;
_AD2CH1ACC    = 0xA40;
 AD2CH2CON    = 0xA44;
_AD2CH2CON    = 0xA44;
_AD2CH2CONbits = 0xA44;
 AD2CH2DATA   = 0xA48;
_AD2CH2DATA   = 0xA48;
 AD2CH2CNT    = 0xA4C;
_AD2CH2CNT    = 0xA4C;
_AD2CH2CNTbits = 0xA4C;
 AD2CH2CMPLO  = 0xA50;
_AD2CH2CMPLO  = 0xA50;
 AD2CH2CMPHI  = 0xA54;
_AD2CH2CMPHI  = 0xA54;
 AD2CH2ACC    = 0xA58;
_AD2CH2ACC    = 0xA58;
 AD2CH3CON    = 0xA5C;
_AD2CH3CON    = 0xA5C;
_AD2CH3CONbits = 0xA5C;
 AD2CH3DATA   = 0xA60;
_AD2CH3DATA   = 0xA60;
 AD2CH3CNT    = 0xA64;
_AD2CH3CNT    = 0xA64;
_AD2CH3CNTbits = 0xA64;
 AD2CH3CMPLO  = 0xA68;
_AD2CH3CMPLO  = 0xA68;
 AD2CH3CMPHI  = 0xA6C;
_AD2CH3CMPHI  = 0xA6C;
 AD2CH3ACC    = 0xA70;
_AD2CH3ACC    = 0xA70;
 AD2CH4CON    = 0xA74;
_AD2CH4CON    = 0xA74;
_AD2CH4CONbits = 0xA74;
 AD2CH4DATA   = 0xA78;
_AD2CH4DATA   = 0xA78;
 AD2CH4CNT    = 0xA7C;
_AD2CH4CNT    = 0xA7C;
_AD2CH4CNTbits = 0xA7C;
 AD2CH4CMPLO  = 0xA80;
_AD2CH4CMPLO  = 0xA80;
 AD2CH4CMPHI  = 0xA84;
_AD2CH4CMPHI  = 0xA84;
 AD2CH4ACC    = 0xA88;
_AD2CH4ACC    = 0xA88;
 AD2CH5CON    = 0xA8C;
_AD2CH5CON    = 0xA8C;
_AD2CH5CONbits = 0xA8C;
 AD2CH5DATA   = 0xA90;
_AD2CH5DATA   = 0xA90;
 AD2CH5CNT    = 0xA94;
_AD2CH5CNT    = 0xA94;
_AD2CH5CNTbits = 0xA94;
 AD2CH5CMPLO  = 0xA98;
_AD2CH5CMPLO  = 0xA98;
 AD2CH5CMPHI  = 0xA9C;
_AD2CH5CMPHI  = 0xA9C;
 AD2CH5ACC    = 0xAA0;
_AD2CH5ACC    = 0xAA0;
 AD2CH6CON    = 0xAA4;
_AD2CH6CON    = 0xAA4;
_AD2CH6CONbits = 0xAA4;
 AD2CH6DATA   = 0xAA8;
_AD2CH6DATA   = 0xAA8;
 AD2CH6CNT    = 0xAAC;
_AD2CH6CNT    = 0xAAC;
_AD2CH6CNTbits = 0xAAC;
 AD2CH6CMPLO  = 0xAB0;
_AD2CH6CMPLO  = 0xAB0;
 AD2CH6CMPHI  = 0xAB4;
_AD2CH6CMPHI  = 0xAB4;
 AD2CH6ACC    = 0xAB8;
_AD2CH6ACC    = 0xAB8;
 AD2CH7CON    = 0xABC;
_AD2CH7CON    = 0xABC;
_AD2CH7CONbits = 0xABC;
 AD2CH7DATA   = 0xAC0;
_AD2CH7DATA   = 0xAC0;
 AD2CH7CNT    = 0xAC4;
_AD2CH7CNT    = 0xAC4;
_AD2CH7CNTbits = 0xAC4;
 AD2CH7CMPLO  = 0xAC8;
_AD2CH7CMPLO  = 0xAC8;
 AD2CH7CMPHI  = 0xACC;
_AD2CH7CMPHI  = 0xACC;
 AD2CH7ACC    = 0xAD0;
_AD2CH7ACC    = 0xAD0;
 AD2CH8CON    = 0xAD4;
_AD2CH8CON    = 0xAD4;
_AD2CH8CONbits = 0xAD4;
 AD2CH8DATA   = 0xAD8;
_AD2CH8DATA   = 0xAD8;
 AD2CH8CNT    = 0xADC;
_AD2CH8CNT    = 0xADC;
_AD2CH8CNTbits = 0xADC;
 AD2CH8CMPLO  = 0xAE0;
_AD2CH8CMPLO  = 0xAE0;
 AD2CH8CMPHI  = 0xAE4;
_AD2CH8CMPHI  = 0xAE4;
 AD2CH8ACC    = 0xAE8;
_AD2CH8ACC    = 0xAE8;
 AD2CH9CON    = 0xAEC;
_AD2CH9CON    = 0xAEC;
_AD2CH9CONbits = 0xAEC;
 AD2CH9DATA   = 0xAF0;
_AD2CH9DATA   = 0xAF0;
 AD2CH9CNT    = 0xAF4;
_AD2CH9CNT    = 0xAF4;
_AD2CH9CNTbits = 0xAF4;
 AD2CH9CMPLO  = 0xAF8;
_AD2CH9CMPLO  = 0xAF8;
 AD2CH9CMPHI  = 0xAFC;
_AD2CH9CMPHI  = 0xAFC;
 AD2CH9ACC    = 0xB00;
_AD2CH9ACC    = 0xB00;
 AD2CH10CON   = 0xB04;
_AD2CH10CON   = 0xB04;
_AD2CH10CONbits = 0xB04;
 AD2CH10DATA  = 0xB08;
_AD2CH10DATA  = 0xB08;
 AD2CH10CNT   = 0xB0C;
_AD2CH10CNT   = 0xB0C;
_AD2CH10CNTbits = 0xB0C;
 AD2CH10CMPLO = 0xB10;
_AD2CH10CMPLO = 0xB10;
 AD2CH10CMPHI = 0xB14;
_AD2CH10CMPHI = 0xB14;
 AD2CH10ACC   = 0xB18;
_AD2CH10ACC   = 0xB18;
 AD2CH11CON   = 0xB1C;
_AD2CH11CON   = 0xB1C;
_AD2CH11CONbits = 0xB1C;
 AD2CH11DATA  = 0xB20;
_AD2CH11DATA  = 0xB20;
 AD2CH11CNT   = 0xB24;
_AD2CH11CNT   = 0xB24;
_AD2CH11CNTbits = 0xB24;
 AD2CH11CMPLO = 0xB28;
_AD2CH11CMPLO = 0xB28;
 AD2CH11CMPHI = 0xB2C;
_AD2CH11CMPHI = 0xB2C;
 AD2CH11ACC   = 0xB30;
_AD2CH11ACC   = 0xB30;
 AD2CH12CON   = 0xB34;
_AD2CH12CON   = 0xB34;
_AD2CH12CONbits = 0xB34;
 AD2CH12DATA  = 0xB38;
_AD2CH12DATA  = 0xB38;
 AD2CH12CNT   = 0xB3C;
_AD2CH12CNT   = 0xB3C;
_AD2CH12CNTbits = 0xB3C;
 AD2CH12CMPLO = 0xB40;
_AD2CH12CMPLO = 0xB40;
 AD2CH12CMPHI = 0xB44;
_AD2CH12CMPHI = 0xB44;
 AD2CH12ACC   = 0xB48;
_AD2CH12ACC   = 0xB48;
 AD2CH13CON   = 0xB4C;
_AD2CH13CON   = 0xB4C;
_AD2CH13CONbits = 0xB4C;
 AD2CH13DATA  = 0xB50;
_AD2CH13DATA  = 0xB50;
 AD2CH13CNT   = 0xB54;
_AD2CH13CNT   = 0xB54;
_AD2CH13CNTbits = 0xB54;
 AD2CH13CMPLO = 0xB58;
_AD2CH13CMPLO = 0xB58;
 AD2CH13CMPHI = 0xB5C;
_AD2CH13CMPHI = 0xB5C;
 AD2CH13ACC   = 0xB60;
_AD2CH13ACC   = 0xB60;
 AD2CH14CON   = 0xB64;
_AD2CH14CON   = 0xB64;
_AD2CH14CONbits = 0xB64;
 AD2CH14DATA  = 0xB68;
_AD2CH14DATA  = 0xB68;
 AD2CH14CNT   = 0xB6C;
_AD2CH14CNT   = 0xB6C;
_AD2CH14CNTbits = 0xB6C;
 AD2CH14CMPLO = 0xB70;
_AD2CH14CMPLO = 0xB70;
 AD2CH14CMPHI = 0xB74;
_AD2CH14CMPHI = 0xB74;
 AD2CH14ACC   = 0xB78;
_AD2CH14ACC   = 0xB78;
 AD2CH15CON   = 0xB7C;
_AD2CH15CON   = 0xB7C;
_AD2CH15CONbits = 0xB7C;
 AD2CH15DATA  = 0xB80;
_AD2CH15DATA  = 0xB80;
 AD2CH15CNT   = 0xB84;
_AD2CH15CNT   = 0xB84;
_AD2CH15CNTbits = 0xB84;
 AD2CH15CMPLO = 0xB88;
_AD2CH15CMPLO = 0xB88;
 AD2CH15CMPHI = 0xB8C;
_AD2CH15CMPHI = 0xB8C;
 AD2CH15ACC   = 0xB90;
_AD2CH15ACC   = 0xB90;
 AD2CH16CON   = 0xB94;
_AD2CH16CON   = 0xB94;
_AD2CH16CONbits = 0xB94;
 AD2CH16DATA  = 0xB98;
_AD2CH16DATA  = 0xB98;
 AD2CH16CNT   = 0xB9C;
_AD2CH16CNT   = 0xB9C;
_AD2CH16CNTbits = 0xB9C;
 AD2CH16CMPLO = 0xBA0;
_AD2CH16CMPLO = 0xBA0;
 AD2CH16CMPHI = 0xBA4;
_AD2CH16CMPHI = 0xBA4;
 AD2CH16ACC   = 0xBA8;
_AD2CH16ACC   = 0xBA8;
 AD2CH17CON   = 0xBAC;
_AD2CH17CON   = 0xBAC;
_AD2CH17CONbits = 0xBAC;
 AD2CH17DATA  = 0xBB0;
_AD2CH17DATA  = 0xBB0;
 AD2CH17CNT   = 0xBB4;
_AD2CH17CNT   = 0xBB4;
_AD2CH17CNTbits = 0xBB4;
 AD2CH17CMPLO = 0xBB8;
_AD2CH17CMPLO = 0xBB8;
 AD2CH17CMPHI = 0xBBC;
_AD2CH17CMPHI = 0xBBC;
 AD2CH17ACC   = 0xBC0;
_AD2CH17ACC   = 0xBC0;
 AD2CH18CON   = 0xBC4;
_AD2CH18CON   = 0xBC4;
_AD2CH18CONbits = 0xBC4;
 AD2CH18DATA  = 0xBC8;
_AD2CH18DATA  = 0xBC8;
 AD2CH18CNT   = 0xBCC;
_AD2CH18CNT   = 0xBCC;
_AD2CH18CNTbits = 0xBCC;
 AD2CH18CMPLO = 0xBD0;
_AD2CH18CMPLO = 0xBD0;
 AD2CH18CMPHI = 0xBD4;
_AD2CH18CMPHI = 0xBD4;
 AD2CH18ACC   = 0xBD8;
_AD2CH18ACC   = 0xBD8;
 AD2CH19CON   = 0xBDC;
_AD2CH19CON   = 0xBDC;
_AD2CH19CONbits = 0xBDC;
 AD2CH19DATA  = 0xBE0;
_AD2CH19DATA  = 0xBE0;
 AD2CH19CNT   = 0xBE4;
_AD2CH19CNT   = 0xBE4;
_AD2CH19CNTbits = 0xBE4;
 AD2CH19CMPLO = 0xBE8;
_AD2CH19CMPLO = 0xBE8;
 AD2CH19CMPHI = 0xBEC;
_AD2CH19CMPHI = 0xBEC;
 AD2CH19ACC   = 0xBF0;
_AD2CH19ACC   = 0xBF0;
 PCLKCON      = 0x1000;
_PCLKCON      = 0x1000;
_PCLKCONbits  = 0x1000;
 FSCL         = 0x1004;
_FSCL         = 0x1004;
_FSCLbits     = 0x1004;
 FSMINPER     = 0x1008;
_FSMINPER     = 0x1008;
_FSMINPERbits = 0x1008;
 MPHASE       = 0x100C;
_MPHASE       = 0x100C;
_MPHASEbits   = 0x100C;
 MDC          = 0x1010;
_MDC          = 0x1010;
_MDCbits      = 0x1010;
 MPER         = 0x1014;
_MPER         = 0x1014;
_MPERbits     = 0x1014;
 LFSR         = 0x1018;
_LFSR         = 0x1018;
_LFSRbits     = 0x1018;
 CMBTRIG      = 0x101C;
_CMBTRIG      = 0x101C;
_CMBTRIGbits  = 0x101C;
 LOGCONA      = 0x1020;
_LOGCONA      = 0x1020;
_LOGCONAbits  = 0x1020;
 LOGCONB      = 0x1024;
_LOGCONB      = 0x1024;
_LOGCONBbits  = 0x1024;
 LOGCONC      = 0x1028;
_LOGCONC      = 0x1028;
_LOGCONCbits  = 0x1028;
 LOGCOND      = 0x102C;
_LOGCOND      = 0x102C;
_LOGCONDbits  = 0x102C;
 LOGCONE      = 0x1030;
_LOGCONE      = 0x1030;
_LOGCONEbits  = 0x1030;
 LOGCONF      = 0x1034;
_LOGCONF      = 0x1034;
_LOGCONFbits  = 0x1034;
 PWMEVTA      = 0x1038;
_PWMEVTA      = 0x1038;
_PWMEVTAbits  = 0x1038;
 PWMEVTB      = 0x103C;
_PWMEVTB      = 0x103C;
_PWMEVTBbits  = 0x103C;
 PWMEVTC      = 0x1040;
_PWMEVTC      = 0x1040;
_PWMEVTCbits  = 0x1040;
 PWMEVTD      = 0x1044;
_PWMEVTD      = 0x1044;
_PWMEVTDbits  = 0x1044;
 PWMEVTE      = 0x1048;
_PWMEVTE      = 0x1048;
_PWMEVTEbits  = 0x1048;
 PWMEVTF      = 0x104C;
_PWMEVTF      = 0x104C;
_PWMEVTFbits  = 0x104C;
 PG1CON       = 0x1050;
_PG1CON       = 0x1050;
_PG1CONbits   = 0x1050;
 PG1STAT      = 0x1054;
_PG1STAT      = 0x1054;
_PG1STATbits  = 0x1054;
 PG1IOCON     = 0x1058;
_PG1IOCON     = 0x1058;
_PG1IOCONbits = 0x1058;
 PG1EVT       = 0x105C;
_PG1EVT       = 0x105C;
_PG1EVTbits   = 0x105C;
 PG1FPCI      = 0x1060;
_PG1FPCI      = 0x1060;
_PG1FPCIbits  = 0x1060;
 PG1CLPCI     = 0x1064;
_PG1CLPCI     = 0x1064;
_PG1CLPCIbits = 0x1064;
 PG1FFPCI     = 0x1068;
_PG1FFPCI     = 0x1068;
_PG1FFPCIbits = 0x1068;
 PG1SPCI      = 0x106C;
_PG1SPCI      = 0x106C;
_PG1SPCIbits  = 0x106C;
 PG1LEB       = 0x1070;
_PG1LEB       = 0x1070;
_PG1LEBbits   = 0x1070;
 PG1PHASE     = 0x1074;
_PG1PHASE     = 0x1074;
_PG1PHASEbits = 0x1074;
 PG1DC        = 0x1078;
_PG1DC        = 0x1078;
_PG1DCbits    = 0x1078;
 PG1DCA       = 0x107C;
_PG1DCA       = 0x107C;
_PG1DCAbits   = 0x107C;
 PG1PER       = 0x1080;
_PG1PER       = 0x1080;
_PG1PERbits   = 0x1080;
 PG1TRIGA     = 0x1084;
_PG1TRIGA     = 0x1084;
_PG1TRIGAbits = 0x1084;
 PG1TRIGB     = 0x1088;
_PG1TRIGB     = 0x1088;
_PG1TRIGBbits = 0x1088;
 PG1TRIGC     = 0x108C;
_PG1TRIGC     = 0x108C;
_PG1TRIGCbits = 0x108C;
 PG1DT        = 0x1090;
_PG1DT        = 0x1090;
_PG1DTbits    = 0x1090;
 PG1CAP       = 0x1094;
_PG1CAP       = 0x1094;
_PG1CAPbits   = 0x1094;
 PG2CON       = 0x1098;
_PG2CON       = 0x1098;
_PG2CONbits   = 0x1098;
 PG2STAT      = 0x109C;
_PG2STAT      = 0x109C;
_PG2STATbits  = 0x109C;
 PG2IOCON     = 0x10A0;
_PG2IOCON     = 0x10A0;
_PG2IOCONbits = 0x10A0;
 PG2EVT       = 0x10A4;
_PG2EVT       = 0x10A4;
_PG2EVTbits   = 0x10A4;
 PG2FPCI      = 0x10A8;
_PG2FPCI      = 0x10A8;
_PG2FPCIbits  = 0x10A8;
 PG2CLPCI     = 0x10AC;
_PG2CLPCI     = 0x10AC;
_PG2CLPCIbits = 0x10AC;
 PG2FFPCI     = 0x10B0;
_PG2FFPCI     = 0x10B0;
_PG2FFPCIbits = 0x10B0;
 PG2SPCI      = 0x10B4;
_PG2SPCI      = 0x10B4;
_PG2SPCIbits  = 0x10B4;
 PG2LEB       = 0x10B8;
_PG2LEB       = 0x10B8;
_PG2LEBbits   = 0x10B8;
 PG2PHASE     = 0x10BC;
_PG2PHASE     = 0x10BC;
_PG2PHASEbits = 0x10BC;
 PG2DC        = 0x10C0;
_PG2DC        = 0x10C0;
_PG2DCbits    = 0x10C0;
 PG2DCA       = 0x10C4;
_PG2DCA       = 0x10C4;
_PG2DCAbits   = 0x10C4;
 PG2PER       = 0x10C8;
_PG2PER       = 0x10C8;
_PG2PERbits   = 0x10C8;
 PG2TRIGA     = 0x10CC;
_PG2TRIGA     = 0x10CC;
_PG2TRIGAbits = 0x10CC;
 PG2TRIGB     = 0x10D0;
_PG2TRIGB     = 0x10D0;
_PG2TRIGBbits = 0x10D0;
 PG2TRIGC     = 0x10D4;
_PG2TRIGC     = 0x10D4;
_PG2TRIGCbits = 0x10D4;
 PG2DT        = 0x10D8;
_PG2DT        = 0x10D8;
_PG2DTbits    = 0x10D8;
 PG2CAP       = 0x10DC;
_PG2CAP       = 0x10DC;
_PG2CAPbits   = 0x10DC;
 PG3CON       = 0x10E0;
_PG3CON       = 0x10E0;
_PG3CONbits   = 0x10E0;
 PG3STAT      = 0x10E4;
_PG3STAT      = 0x10E4;
_PG3STATbits  = 0x10E4;
 PG3IOCON     = 0x10E8;
_PG3IOCON     = 0x10E8;
_PG3IOCONbits = 0x10E8;
 PG3EVT       = 0x10EC;
_PG3EVT       = 0x10EC;
_PG3EVTbits   = 0x10EC;
 PG3FPCI      = 0x10F0;
_PG3FPCI      = 0x10F0;
_PG3FPCIbits  = 0x10F0;
 PG3CLPCI     = 0x10F4;
_PG3CLPCI     = 0x10F4;
_PG3CLPCIbits = 0x10F4;
 PG3FFPCI     = 0x10F8;
_PG3FFPCI     = 0x10F8;
_PG3FFPCIbits = 0x10F8;
 PG3SPCI      = 0x10FC;
_PG3SPCI      = 0x10FC;
_PG3SPCIbits  = 0x10FC;
 PG3LEB       = 0x1100;
_PG3LEB       = 0x1100;
_PG3LEBbits   = 0x1100;
 PG3PHASE     = 0x1104;
_PG3PHASE     = 0x1104;
_PG3PHASEbits = 0x1104;
 PG3DC        = 0x1108;
_PG3DC        = 0x1108;
_PG3DCbits    = 0x1108;
 PG3DCA       = 0x110C;
_PG3DCA       = 0x110C;
_PG3DCAbits   = 0x110C;
 PG3PER       = 0x1110;
_PG3PER       = 0x1110;
_PG3PERbits   = 0x1110;
 PG3TRIGA     = 0x1114;
_PG3TRIGA     = 0x1114;
_PG3TRIGAbits = 0x1114;
 PG3TRIGB     = 0x1118;
_PG3TRIGB     = 0x1118;
_PG3TRIGBbits = 0x1118;
 PG3TRIGC     = 0x111C;
_PG3TRIGC     = 0x111C;
_PG3TRIGCbits = 0x111C;
 PG3DT        = 0x1120;
_PG3DT        = 0x1120;
_PG3DTbits    = 0x1120;
 PG3CAP       = 0x1124;
_PG3CAP       = 0x1124;
_PG3CAPbits   = 0x1124;
 PG4CON       = 0x1128;
_PG4CON       = 0x1128;
_PG4CONbits   = 0x1128;
 PG4STAT      = 0x112C;
_PG4STAT      = 0x112C;
_PG4STATbits  = 0x112C;
 PG4IOCON     = 0x1130;
_PG4IOCON     = 0x1130;
_PG4IOCONbits = 0x1130;
 PG4EVT       = 0x1134;
_PG4EVT       = 0x1134;
_PG4EVTbits   = 0x1134;
 PG4FPCI      = 0x1138;
_PG4FPCI      = 0x1138;
_PG4FPCIbits  = 0x1138;
 PG4CLPCI     = 0x113C;
_PG4CLPCI     = 0x113C;
_PG4CLPCIbits = 0x113C;
 PG4FFPCI     = 0x1140;
_PG4FFPCI     = 0x1140;
_PG4FFPCIbits = 0x1140;
 PG4SPCI      = 0x1144;
_PG4SPCI      = 0x1144;
_PG4SPCIbits  = 0x1144;
 PG4LEB       = 0x1148;
_PG4LEB       = 0x1148;
_PG4LEBbits   = 0x1148;
 PG4PHASE     = 0x114C;
_PG4PHASE     = 0x114C;
_PG4PHASEbits = 0x114C;
 PG4DC        = 0x1150;
_PG4DC        = 0x1150;
_PG4DCbits    = 0x1150;
 PG4DCA       = 0x1154;
_PG4DCA       = 0x1154;
_PG4DCAbits   = 0x1154;
 PG4PER       = 0x1158;
_PG4PER       = 0x1158;
_PG4PERbits   = 0x1158;
 PG4TRIGA     = 0x115C;
_PG4TRIGA     = 0x115C;
_PG4TRIGAbits = 0x115C;
 PG4TRIGB     = 0x1160;
_PG4TRIGB     = 0x1160;
_PG4TRIGBbits = 0x1160;
 PG4TRIGC     = 0x1164;
_PG4TRIGC     = 0x1164;
_PG4TRIGCbits = 0x1164;
 PG4DT        = 0x1168;
_PG4DT        = 0x1168;
_PG4DTbits    = 0x1168;
 PG4CAP       = 0x116C;
_PG4CAP       = 0x116C;
_PG4CAPbits   = 0x116C;
 U1CON        = 0x1700;
_U1CON        = 0x1700;
_U1CONbits    = 0x1700;
 U1MODE       = 0x1700;
_U1MODE       = 0x1700;
_U1MODEbits   = 0x1700;
 U1STA        = 0x1704;
_U1STA        = 0x1704;
_U1STAbits    = 0x1704;
 U1STAT       = 0x1704;
_U1STAT       = 0x1704;
_U1STATbits   = 0x1704;
 U1BRG        = 0x1708;
_U1BRG        = 0x1708;
_U1BRGbits    = 0x1708;
 U1RXB        = 0x170C;
_U1RXB        = 0x170C;
_U1RXBbits    = 0x170C;
 U1RXREG      = 0x170C;
_U1RXREG      = 0x170C;
_U1RXREGbits  = 0x170C;
 U1TXB        = 0x1710;
_U1TXB        = 0x1710;
_U1TXBbits    = 0x1710;
 U1TXREG      = 0x1710;
_U1TXREG      = 0x1710;
_U1TXREGbits  = 0x1710;
 U1PA         = 0x1714;
_U1PA         = 0x1714;
_U1PAbits     = 0x1714;
 U1PB         = 0x1718;
_U1PB         = 0x1718;
_U1PBbits     = 0x1718;
 U1CHK        = 0x171C;
_U1CHK        = 0x171C;
_U1CHKbits    = 0x171C;
 U1SCCON      = 0x1720;
_U1SCCON      = 0x1720;
_U1SCCONbits  = 0x1720;
 U1UIR        = 0x1724;
_U1UIR        = 0x1724;
_U1UIRbits    = 0x1724;
 U2CON        = 0x1740;
_U2CON        = 0x1740;
_U2CONbits    = 0x1740;
 U2MODE       = 0x1740;
_U2MODE       = 0x1740;
_U2MODEbits   = 0x1740;
 U2STA        = 0x1744;
_U2STA        = 0x1744;
_U2STAbits    = 0x1744;
 U2STAT       = 0x1744;
_U2STAT       = 0x1744;
_U2STATbits   = 0x1744;
 U2BRG        = 0x1748;
_U2BRG        = 0x1748;
_U2BRGbits    = 0x1748;
 U2RXB        = 0x174C;
_U2RXB        = 0x174C;
_U2RXBbits    = 0x174C;
 U2RXREG      = 0x174C;
_U2RXREG      = 0x174C;
_U2RXREGbits  = 0x174C;
 U2TXB        = 0x1750;
_U2TXB        = 0x1750;
_U2TXBbits    = 0x1750;
 U2TXREG      = 0x1750;
_U2TXREG      = 0x1750;
_U2TXREGbits  = 0x1750;
 U2PA         = 0x1754;
_U2PA         = 0x1754;
_U2PAbits     = 0x1754;
 U2PB         = 0x1758;
_U2PB         = 0x1758;
_U2PBbits     = 0x1758;
 U2CHK        = 0x175C;
_U2CHK        = 0x175C;
_U2CHKbits    = 0x175C;
 U2SCCON      = 0x1760;
_U2SCCON      = 0x1760;
_U2SCCONbits  = 0x1760;
 U2UIR        = 0x1764;
_U2UIR        = 0x1764;
_U2UIRbits    = 0x1764;
 U3CON        = 0x1780;
_U3CON        = 0x1780;
_U3CONbits    = 0x1780;
 U3MODE       = 0x1780;
_U3MODE       = 0x1780;
_U3MODEbits   = 0x1780;
 U3STA        = 0x1784;
_U3STA        = 0x1784;
_U3STAbits    = 0x1784;
 U3STAT       = 0x1784;
_U3STAT       = 0x1784;
_U3STATbits   = 0x1784;
 U3BRG        = 0x1788;
_U3BRG        = 0x1788;
_U3BRGbits    = 0x1788;
 U3RXB        = 0x178C;
_U3RXB        = 0x178C;
_U3RXBbits    = 0x178C;
 U3RXREG      = 0x178C;
_U3RXREG      = 0x178C;
_U3RXREGbits  = 0x178C;
 U3TXB        = 0x1790;
_U3TXB        = 0x1790;
_U3TXBbits    = 0x1790;
 U3TXREG      = 0x1790;
_U3TXREG      = 0x1790;
_U3TXREGbits  = 0x1790;
 U3PA         = 0x1794;
_U3PA         = 0x1794;
_U3PAbits     = 0x1794;
 U3PB         = 0x1798;
_U3PB         = 0x1798;
_U3PBbits     = 0x1798;
 U3CHK        = 0x179C;
_U3CHK        = 0x179C;
_U3CHKbits    = 0x179C;
 U3SCCON      = 0x17A0;
_U3SCCON      = 0x17A0;
_U3SCCONbits  = 0x17A0;
 U3UIR        = 0x17A4;
_U3UIR        = 0x17A4;
_U3UIRbits    = 0x17A4;
 SPI1CON1     = 0x1800;
_SPI1CON1     = 0x1800;
_SPI1CON1bits = 0x1800;
 SPI1CON2     = 0x1804;
_SPI1CON2     = 0x1804;
_SPI1CON2bits = 0x1804;
 SPI1STAT     = 0x1808;
_SPI1STAT     = 0x1808;
_SPI1STATbits = 0x1808;
 SPI1BUF      = 0x180C;
_SPI1BUF      = 0x180C;
_SPI1BUFbits  = 0x180C;
 SPI1BRG      = 0x1810;
_SPI1BRG      = 0x1810;
_SPI1BRGbits  = 0x1810;
 SPI1IMSK     = 0x1814;
_SPI1IMSK     = 0x1814;
_SPI1IMSKbits = 0x1814;
 SPI1URDT     = 0x1818;
_SPI1URDT     = 0x1818;
_SPI1URDTbits = 0x1818;
 SPI2CON1     = 0x1820;
_SPI2CON1     = 0x1820;
_SPI2CON1bits = 0x1820;
 SPI2CON2     = 0x1824;
_SPI2CON2     = 0x1824;
_SPI2CON2bits = 0x1824;
 SPI2STAT     = 0x1828;
_SPI2STAT     = 0x1828;
_SPI2STATbits = 0x1828;
 SPI2BUF      = 0x182C;
_SPI2BUF      = 0x182C;
_SPI2BUFbits  = 0x182C;
 SPI2BRG      = 0x1830;
_SPI2BRG      = 0x1830;
_SPI2BRGbits  = 0x1830;
 SPI2IMSK     = 0x1834;
_SPI2IMSK     = 0x1834;
_SPI2IMSKbits = 0x1834;
 SPI2URDT     = 0x1838;
_SPI2URDT     = 0x1838;
_SPI2URDTbits = 0x1838;
 SPI3CON1     = 0x1840;
_SPI3CON1     = 0x1840;
_SPI3CON1bits = 0x1840;
 SPI3CON2     = 0x1844;
_SPI3CON2     = 0x1844;
_SPI3CON2bits = 0x1844;
 SPI3STAT     = 0x1848;
_SPI3STAT     = 0x1848;
_SPI3STATbits = 0x1848;
 SPI3BUF      = 0x184C;
_SPI3BUF      = 0x184C;
_SPI3BUFbits  = 0x184C;
 SPI3BRG      = 0x1850;
_SPI3BRG      = 0x1850;
_SPI3BRGbits  = 0x1850;
 SPI3IMSK     = 0x1854;
_SPI3IMSK     = 0x1854;
_SPI3IMSKbits = 0x1854;
 SPI3URDT     = 0x1858;
_SPI3URDT     = 0x1858;
_SPI3URDTbits = 0x1858;
 I2C1CON1     = 0x1880;
_I2C1CON1     = 0x1880;
_I2C1CON1bits = 0x1880;
 I2C1STAT1    = 0x1884;
_I2C1STAT1    = 0x1884;
_I2C1STAT1bits = 0x1884;
 I2C1ADD      = 0x1888;
_I2C1ADD      = 0x1888;
_I2C1ADDbits  = 0x1888;
 I2C1MSK      = 0x188C;
_I2C1MSK      = 0x188C;
_I2C1MSKbits  = 0x188C;
 I2C1HBRG     = 0x1890;
_I2C1HBRG     = 0x1890;
_I2C1HBRGbits = 0x1890;
 I2C1TRN      = 0x1894;
_I2C1TRN      = 0x1894;
_I2C1TRNbits  = 0x1894;
 I2C1RCV      = 0x1898;
_I2C1RCV      = 0x1898;
_I2C1RCVbits  = 0x1898;
 I2C1CON2     = 0x189C;
_I2C1CON2     = 0x189C;
_I2C1CON2bits = 0x189C;
 I2C1LBRG     = 0x18A0;
_I2C1LBRG     = 0x18A0;
_I2C1LBRGbits = 0x18A0;
 I2C1INTC     = 0x18A4;
_I2C1INTC     = 0x18A4;
_I2C1INTCbits = 0x18A4;
 I2C1STAT2    = 0x18A8;
_I2C1STAT2    = 0x18A8;
_I2C1STAT2bits = 0x18A8;
 I2C1PEC      = 0x18AC;
_I2C1PEC      = 0x18AC;
_I2C1PECbits  = 0x18AC;
 I2C1BTO      = 0x18B0;
_I2C1BTO      = 0x18B0;
_I2C1BTObits  = 0x18B0;
 I2C1HBCTO    = 0x18B4;
_I2C1HBCTO    = 0x18B4;
_I2C1HBCTObits = 0x18B4;
 I2C1CBCTO    = 0x18B8;
_I2C1CBCTO    = 0x18B8;
_I2C1CBCTObits = 0x18B8;
 I2C1BITO     = 0x18BC;
_I2C1BITO     = 0x18BC;
_I2C1BITObits = 0x18BC;
 I2C1SDASUT   = 0x18C0;
_I2C1SDASUT   = 0x18C0;
_I2C1SDASUTbits = 0x18C0;
 I2C2CON1     = 0x18D0;
_I2C2CON1     = 0x18D0;
_I2C2CON1bits = 0x18D0;
 I2C2STAT1    = 0x18D4;
_I2C2STAT1    = 0x18D4;
_I2C2STAT1bits = 0x18D4;
 I2C2ADD      = 0x18D8;
_I2C2ADD      = 0x18D8;
_I2C2ADDbits  = 0x18D8;
 I2C2MSK      = 0x18DC;
_I2C2MSK      = 0x18DC;
_I2C2MSKbits  = 0x18DC;
 I2C2HBRG     = 0x18E0;
_I2C2HBRG     = 0x18E0;
_I2C2HBRGbits = 0x18E0;
 I2C2TRN      = 0x18E4;
_I2C2TRN      = 0x18E4;
_I2C2TRNbits  = 0x18E4;
 I2C2RCV      = 0x18E8;
_I2C2RCV      = 0x18E8;
_I2C2RCVbits  = 0x18E8;
 I2C2CON2     = 0x18EC;
_I2C2CON2     = 0x18EC;
_I2C2CON2bits = 0x18EC;
 I2C2LBRG     = 0x18F0;
_I2C2LBRG     = 0x18F0;
_I2C2LBRGbits = 0x18F0;
 I2C2INTC     = 0x18F4;
_I2C2INTC     = 0x18F4;
_I2C2INTCbits = 0x18F4;
 I2C2STAT2    = 0x18F8;
_I2C2STAT2    = 0x18F8;
_I2C2STAT2bits = 0x18F8;
 I2C2PEC      = 0x18FC;
_I2C2PEC      = 0x18FC;
_I2C2PECbits  = 0x18FC;
 I2C2BTO      = 0x1900;
_I2C2BTO      = 0x1900;
_I2C2BTObits  = 0x1900;
 I2C2HBCTO    = 0x1904;
_I2C2HBCTO    = 0x1904;
_I2C2HBCTObits = 0x1904;
 I2C2CBCTO    = 0x1908;
_I2C2CBCTO    = 0x1908;
_I2C2CBCTObits = 0x1908;
 I2C2BITO     = 0x190C;
_I2C2BITO     = 0x190C;
_I2C2BITObits = 0x190C;
 I2C2SDASUT   = 0x1910;
_I2C2SDASUT   = 0x1910;
_I2C2SDASUTbits = 0x1910;
 SENT1CON1    = 0x19C0;
_SENT1CON1    = 0x19C0;
_SENT1CON1bits = 0x19C0;
 SENT1CON2    = 0x19C4;
_SENT1CON2    = 0x19C4;
_SENT1CON2bits = 0x19C4;
 SENT1CON3    = 0x19C8;
_SENT1CON3    = 0x19C8;
_SENT1CON3bits = 0x19C8;
 SENT1STAT    = 0x19CC;
_SENT1STAT    = 0x19CC;
_SENT1STATbits = 0x19CC;
 SENT1SYNC    = 0x19D0;
_SENT1SYNC    = 0x19D0;
_SENT1SYNCbits = 0x19D0;
 SENT1DAT     = 0x19D4;
_SENT1DAT     = 0x19D4;
_SENT1DATbits = 0x19D4;
 SENT2CON1    = 0x19E0;
_SENT2CON1    = 0x19E0;
_SENT2CON1bits = 0x19E0;
 SENT2CON2    = 0x19E4;
_SENT2CON2    = 0x19E4;
_SENT2CON2bits = 0x19E4;
 SENT2CON3    = 0x19E8;
_SENT2CON3    = 0x19E8;
_SENT2CON3bits = 0x19E8;
 SENT2STAT    = 0x19EC;
_SENT2STAT    = 0x19EC;
_SENT2STATbits = 0x19EC;
 SENT2SYNC    = 0x19F0;
_SENT2SYNC    = 0x19F0;
_SENT2SYNCbits = 0x19F0;
 SENT2DAT     = 0x19F4;
_SENT2DAT     = 0x19F4;
_SENT2DATbits = 0x19F4;
 QEI1CON      = 0x1A00;
_QEI1CON      = 0x1A00;
_QEI1CONbits  = 0x1A00;
 QEI1IOC      = 0x1A04;
_QEI1IOC      = 0x1A04;
_QEI1IOCbits  = 0x1A04;
 QEI1STAT     = 0x1A08;
_QEI1STAT     = 0x1A08;
_QEI1STATbits = 0x1A08;
 POS1CNT      = 0x1A0C;
_POS1CNT      = 0x1A0C;
 POS1HLD      = 0x1A10;
_POS1HLD      = 0x1A10;
 VEL1CNT      = 0x1A14;
_VEL1CNT      = 0x1A14;
 VEL1HLD      = 0x1A18;
_VEL1HLD      = 0x1A18;
 INT1TMR      = 0x1A1C;
_INT1TMR      = 0x1A1C;
 INT1HLD      = 0x1A20;
_INT1HLD      = 0x1A20;
 INDX1CNT     = 0x1A24;
_INDX1CNT     = 0x1A24;
 INDX1HLD     = 0x1A28;
_INDX1HLD     = 0x1A28;
 QEI1GEC      = 0x1A2C;
_QEI1GEC      = 0x1A2C;
 QEI1LEC      = 0x1A30;
_QEI1LEC      = 0x1A30;
 CCP1CON1     = 0x1B00;
_CCP1CON1     = 0x1B00;
_CCP1CON1bits = 0x1B00;
 CCP1CON2     = 0x1B04;
_CCP1CON2     = 0x1B04;
_CCP1CON2bits = 0x1B04;
 CCP1CON3     = 0x1B08;
_CCP1CON3     = 0x1B08;
_CCP1CON3bits = 0x1B08;
 CCP1STAT     = 0x1B0C;
_CCP1STAT     = 0x1B0C;
_CCP1STATbits = 0x1B0C;
 CCP1TMR      = 0x1B10;
_CCP1TMR      = 0x1B10;
_CCP1TMRbits  = 0x1B10;
 CCP1PR       = 0x1B14;
_CCP1PR       = 0x1B14;
_CCP1PRbits   = 0x1B14;
 CCP1RA       = 0x1B18;
_CCP1RA       = 0x1B18;
_CCP1RAbits   = 0x1B18;
 CCP1RB       = 0x1B1C;
_CCP1RB       = 0x1B1C;
_CCP1RBbits   = 0x1B1C;
 CCP1BUF      = 0x1B20;
_CCP1BUF      = 0x1B20;
_CCP1BUFbits  = 0x1B20;
 CCP2CON1     = 0x1B30;
_CCP2CON1     = 0x1B30;
_CCP2CON1bits = 0x1B30;
 CCP2CON2     = 0x1B34;
_CCP2CON2     = 0x1B34;
_CCP2CON2bits = 0x1B34;
 CCP2CON3     = 0x1B38;
_CCP2CON3     = 0x1B38;
_CCP2CON3bits = 0x1B38;
 CCP2STAT     = 0x1B3C;
_CCP2STAT     = 0x1B3C;
_CCP2STATbits = 0x1B3C;
 CCP2TMR      = 0x1B40;
_CCP2TMR      = 0x1B40;
_CCP2TMRbits  = 0x1B40;
 CCP2PR       = 0x1B44;
_CCP2PR       = 0x1B44;
_CCP2PRbits   = 0x1B44;
 CCP2RA       = 0x1B48;
_CCP2RA       = 0x1B48;
_CCP2RAbits   = 0x1B48;
 CCP2RB       = 0x1B4C;
_CCP2RB       = 0x1B4C;
_CCP2RBbits   = 0x1B4C;
 CCP2BUF      = 0x1B50;
_CCP2BUF      = 0x1B50;
_CCP2BUFbits  = 0x1B50;
 CCP3CON1     = 0x1B60;
_CCP3CON1     = 0x1B60;
_CCP3CON1bits = 0x1B60;
 CCP3CON2     = 0x1B64;
_CCP3CON2     = 0x1B64;
_CCP3CON2bits = 0x1B64;
 CCP3CON3     = 0x1B68;
_CCP3CON3     = 0x1B68;
_CCP3CON3bits = 0x1B68;
 CCP3STAT     = 0x1B6C;
_CCP3STAT     = 0x1B6C;
_CCP3STATbits = 0x1B6C;
 CCP3TMR      = 0x1B70;
_CCP3TMR      = 0x1B70;
_CCP3TMRbits  = 0x1B70;
 CCP3PR       = 0x1B74;
_CCP3PR       = 0x1B74;
_CCP3PRbits   = 0x1B74;
 CCP3RA       = 0x1B78;
_CCP3RA       = 0x1B78;
_CCP3RAbits   = 0x1B78;
 CCP3RB       = 0x1B7C;
_CCP3RB       = 0x1B7C;
_CCP3RBbits   = 0x1B7C;
 CCP3BUF      = 0x1B80;
_CCP3BUF      = 0x1B80;
_CCP3BUFbits  = 0x1B80;
 CCP4CON1     = 0x1B90;
_CCP4CON1     = 0x1B90;
_CCP4CON1bits = 0x1B90;
 CCP4CON2     = 0x1B94;
_CCP4CON2     = 0x1B94;
_CCP4CON2bits = 0x1B94;
 CCP4CON3     = 0x1B98;
_CCP4CON3     = 0x1B98;
_CCP4CON3bits = 0x1B98;
 CCP4STAT     = 0x1B9C;
_CCP4STAT     = 0x1B9C;
_CCP4STATbits = 0x1B9C;
 CCP4TMR      = 0x1BA0;
_CCP4TMR      = 0x1BA0;
_CCP4TMRbits  = 0x1BA0;
 CCP4PR       = 0x1BA4;
_CCP4PR       = 0x1BA4;
_CCP4PRbits   = 0x1BA4;
 CCP4RA       = 0x1BA8;
_CCP4RA       = 0x1BA8;
_CCP4RAbits   = 0x1BA8;
 CCP4RB       = 0x1BAC;
_CCP4RB       = 0x1BAC;
_CCP4RBbits   = 0x1BAC;
 CCP4BUF      = 0x1BB0;
_CCP4BUF      = 0x1BB0;
_CCP4BUFbits  = 0x1BB0;
 DACCTRL1     = 0x1D40;
_DACCTRL1     = 0x1D40;
_DACCTRL1bits = 0x1D40;
 DACCTRL2     = 0x1D44;
_DACCTRL2     = 0x1D44;
_DACCTRL2bits = 0x1D44;
 DAC1CON      = 0x1D48;
_DAC1CON      = 0x1D48;
_DAC1CONbits  = 0x1D48;
 DAC1DAT      = 0x1D4C;
_DAC1DAT      = 0x1D4C;
_DAC1DATbits  = 0x1D4C;
 DAC1SLPCON   = 0x1D50;
_DAC1SLPCON   = 0x1D50;
_DAC1SLPCONbits = 0x1D50;
 SLP1CON      = 0x1D50;
_SLP1CON      = 0x1D50;
_SLP1CONbits  = 0x1D50;
 DAC1SLPDAT   = 0x1D54;
_DAC1SLPDAT   = 0x1D54;
_DAC1SLPDATbits = 0x1D54;
 SLP1DAT      = 0x1D54;
_SLP1DAT      = 0x1D54;
_SLP1DATbits  = 0x1D54;
 DAC2CON      = 0x1D58;
_DAC2CON      = 0x1D58;
_DAC2CONbits  = 0x1D58;
 DAC2DAT      = 0x1D5C;
_DAC2DAT      = 0x1D5C;
_DAC2DATbits  = 0x1D5C;
 DAC2SLPCON   = 0x1D60;
_DAC2SLPCON   = 0x1D60;
_DAC2SLPCONbits = 0x1D60;
 SLP2CON      = 0x1D60;
_SLP2CON      = 0x1D60;
_SLP2CONbits  = 0x1D60;
 DAC2SLPDAT   = 0x1D64;
_DAC2SLPDAT   = 0x1D64;
_DAC2SLPDATbits = 0x1D64;
 SLP2DAT      = 0x1D64;
_SLP2DAT      = 0x1D64;
_SLP2DATbits  = 0x1D64;
 DAC3CON      = 0x1D68;
_DAC3CON      = 0x1D68;
_DAC3CONbits  = 0x1D68;
 DAC3DAT      = 0x1D6C;
_DAC3DAT      = 0x1D6C;
_DAC3DATbits  = 0x1D6C;
 DAC3SLPCON   = 0x1D70;
_DAC3SLPCON   = 0x1D70;
_DAC3SLPCONbits = 0x1D70;
 SLP3CON      = 0x1D70;
_SLP3CON      = 0x1D70;
_SLP3CONbits  = 0x1D70;
 DAC3SLPDAT   = 0x1D74;
_DAC3SLPDAT   = 0x1D74;
_DAC3SLPDATbits = 0x1D74;
 SLP3DAT      = 0x1D74;
_SLP3DAT      = 0x1D74;
_SLP3DATbits  = 0x1D74;
 T1CON        = 0x1E00;
_T1CON        = 0x1E00;
_T1CONbits    = 0x1E00;
 TMR1         = 0x1E04;
_TMR1         = 0x1E04;
 PR1          = 0x1E08;
_PR1          = 0x1E08;
 HPCCON       = 0x1E10;
_HPCCON       = 0x1E10;
_HPCCONbits   = 0x1E10;
 HPSEL0       = 0x1E14;
_HPSEL0       = 0x1E14;
_HPSEL0bits   = 0x1E14;
 HPSEL1       = 0x1E18;
_HPSEL1       = 0x1E18;
_HPSEL1bits   = 0x1E18;
 HPCCNTL0     = 0x1E20;
_HPCCNTL0     = 0x1E20;
 HPCCNTH0     = 0x1E24;
_HPCCNTH0     = 0x1E24;
 HPCCNTL1     = 0x1E28;
_HPCCNTL1     = 0x1E28;
 HPCCNTH1     = 0x1E2C;
_HPCCNTH1     = 0x1E2C;
 HPCCNTL2     = 0x1E30;
_HPCCNTL2     = 0x1E30;
 HPCCNTH2     = 0x1E34;
_HPCCNTH2     = 0x1E34;
 HPCCNTL3     = 0x1E38;
_HPCCNTL3     = 0x1E38;
 HPCCNTH3     = 0x1E3C;
_HPCCNTH3     = 0x1E3C;
 HPCCNTL4     = 0x1E40;
_HPCCNTL4     = 0x1E40;
 HPCCNTH4     = 0x1E44;
_HPCCNTH4     = 0x1E44;
 HPCCNTL5     = 0x1E48;
_HPCCNTL5     = 0x1E48;
 HPCCNTH5     = 0x1E4C;
_HPCCNTH5     = 0x1E4C;
 HPCCNTL6     = 0x1E50;
_HPCCNTL6     = 0x1E50;
 HPCCNTH6     = 0x1E54;
_HPCCNTH6     = 0x1E54;
 HPCCNTL7     = 0x1E58;
_HPCCNTL7     = 0x1E58;
 HPCCNTH7     = 0x1E5C;
_HPCCNTH7     = 0x1E5C;
 CHECON       = 0x1E60;
_CHECON       = 0x1E60;
_CHECONbits   = 0x1E60;
 CHESTAT      = 0x1E64;
_CHESTAT      = 0x1E64;
_CHESTATbits  = 0x1E64;
 CHEFLTINJ    = 0x1E68;
_CHEFLTINJ    = 0x1E68;
_CHEFLTINJbits = 0x1E68;
 PACCON1      = 0x1E80;
_PACCON1      = 0x1E80;
_PACCON1bits  = 0x1E80;
 PACCON2      = 0x1E84;
_PACCON2      = 0x1E84;
_PACCON2bits  = 0x1E84;
 IOIM1CON     = 0x1E90;
_IOIM1CON     = 0x1E90;
_IOIM1CONbits = 0x1E90;
 IOIM1BCON    = 0x1E94;
_IOIM1BCON    = 0x1E94;
_IOIM1BCONbits = 0x1E94;
 IOIM1STAT    = 0x1E98;
_IOIM1STAT    = 0x1E98;
_IOIM1STATbits = 0x1E98;
 IOIM2CON     = 0x1E9C;
_IOIM2CON     = 0x1E9C;
_IOIM2CONbits = 0x1E9C;
 IOIM2BCON    = 0x1EA0;
_IOIM2BCON    = 0x1EA0;
_IOIM2BCONbits = 0x1EA0;
 IOIM2STAT    = 0x1EA4;
_IOIM2STAT    = 0x1EA4;
_IOIM2STATbits = 0x1EA4;
 IOIM3CON     = 0x1EA8;
_IOIM3CON     = 0x1EA8;
_IOIM3CONbits = 0x1EA8;
 IOIM3BCON    = 0x1EAC;
_IOIM3BCON    = 0x1EAC;
_IOIM3BCONbits = 0x1EAC;
 IOIM3STAT    = 0x1EB0;
_IOIM3STAT    = 0x1EB0;
_IOIM3STATbits = 0x1EB0;
 IOIM4CON     = 0x1EB4;
_IOIM4CON     = 0x1EB4;
_IOIM4CONbits = 0x1EB4;
 IOIM4BCON    = 0x1EB8;
_IOIM4BCON    = 0x1EB8;
_IOIM4BCONbits = 0x1EB8;
 IOIM4STAT    = 0x1EBC;
_IOIM4STAT    = 0x1EBC;
_IOIM4STATbits = 0x1EBC;
 B1SCDATA0L   = 0x1F00;
_B1SCDATA0L   = 0x1F00;
 B1SCDATA0H   = 0x1F04;
_B1SCDATA0H   = 0x1F04;
 B1SCDATA1L   = 0x1F08;
_B1SCDATA1L   = 0x1F08;
 B1SCDATA1H   = 0x1F0C;
_B1SCDATA1H   = 0x1F0C;
 B1SCDATA2L   = 0x1F10;
_B1SCDATA2L   = 0x1F10;
 B1SCDATA2H   = 0x1F14;
_B1SCDATA2H   = 0x1F14;
 B1SCDATA3L   = 0x1F18;
_B1SCDATA3L   = 0x1F18;
 B1SCDATA3H   = 0x1F1C;
_B1SCDATA3H   = 0x1F1C;
 B1IDS0       = 0x1F80;
_B1IDS0       = 0x1F80;
_B1IDS0bits   = 0x1F80;
 B1RDATA0     = 0x1F80;
_B1RDATA0     = 0x1F80;
_B1RDATA0bits = 0x1F80;
 B1IDS1       = 0x1F84;
_B1IDS1       = 0x1F84;
_B1IDS1bits   = 0x1F84;
 B1RDATA1     = 0x1F84;
_B1RDATA1     = 0x1F84;
_B1RDATA1bits = 0x1F84;
 B1IDS2       = 0x1F88;
_B1IDS2       = 0x1F88;
_B1IDS2bits   = 0x1F88;
 B1RDATA2     = 0x1F88;
_B1RDATA2     = 0x1F88;
_B1RDATA2bits = 0x1F88;
 B1IDS3       = 0x1F8C;
_B1IDS3       = 0x1F8C;
_B1IDS3bits   = 0x1F8C;
 B1RDATA3     = 0x1F8C;
_B1RDATA3     = 0x1F8C;
_B1RDATA3bits = 0x1F8C;
 B1IDS4       = 0x1F90;
_B1IDS4       = 0x1F90;
_B1IDS4bits   = 0x1F90;
 B1RDATA4     = 0x1F90;
_B1RDATA4     = 0x1F90;
_B1RDATA4bits = 0x1F90;
 B1IDS5       = 0x1F94;
_B1IDS5       = 0x1F94;
_B1IDS5bits   = 0x1F94;
 B1RDATA5     = 0x1F94;
_B1RDATA5     = 0x1F94;
_B1RDATA5bits = 0x1F94;
 B1IDS6       = 0x1F98;
_B1IDS6       = 0x1F98;
_B1IDS6bits   = 0x1F98;
 B1RDATA6     = 0x1F98;
_B1RDATA6     = 0x1F98;
_B1RDATA6bits = 0x1F98;
 B1IDS7       = 0x1F9C;
_B1IDS7       = 0x1F9C;
_B1IDS7bits   = 0x1F9C;
 B1RDATA7     = 0x1F9C;
_B1RDATA7     = 0x1F9C;
_B1RDATA7bits = 0x1F9C;
 B1CLTCON0    = 0x1FC0;
_B1CLTCON0    = 0x1FC0;
_B1CLTCON0bits = 0x1FC0;
 B1CLTCON1    = 0x1FC4;
_B1CLTCON1    = 0x1FC4;
_B1CLTCON1bits = 0x1FC4;
 B1CLTCON2    = 0x1FC8;
_B1CLTCON2    = 0x1FC8;
_B1CLTCON2bits = 0x1FC8;
 B1CLTCON3    = 0x1FCC;
_B1CLTCON3    = 0x1FCC;
_B1CLTCON3bits = 0x1FCC;
 B1RCCON      = 0x1FE0;
_B1RCCON      = 0x1FE0;
_B1RCCONbits  = 0x1FE0;
 B1CTRLCON    = 0x1FE4;
_B1CTRLCON    = 0x1FE4;
_B1CTRLCONbits = 0x1FE4;
 B1CCON       = 0x1FE8;
_B1CCON       = 0x1FE8;
_B1CCONbits   = 0x1FE8;
 B1CHCON      = 0x1FEC;
_B1CHCON      = 0x1FEC;
_B1CHCONbits  = 0x1FEC;
 B1STAT       = 0x1FF0;
_B1STAT       = 0x1FF0;
_B1STATbits   = 0x1FF0;
 B1INSTR      = 0x1FF4;
_B1INSTR      = 0x1FF4;
_B1INSTRbits  = 0x1FF4;
 B1CHSTAT     = 0x1FF8;
_B1CHSTAT     = 0x1FF8;
_B1CHSTATbits = 0x1FF8;
 B1CON        = 0x1FFC;
_B1CON        = 0x1FFC;
_B1CONbits    = 0x1FFC;
 DMACON       = 0x2300;
_DMACON       = 0x2300;
_DMACONbits   = 0x2300;
 DMABUF       = 0x2304;
_DMABUF       = 0x2304;
 DMALOW       = 0x2308;
_DMALOW       = 0x2308;
_DMALOWbits   = 0x2308;
 DMAHIGH      = 0x230C;
_DMAHIGH      = 0x230C;
_DMAHIGHbits  = 0x230C;
 DMA0CH       = 0x2310;
_DMA0CH       = 0x2310;
_DMA0CHbits   = 0x2310;
 DMA0SEL      = 0x2314;
_DMA0SEL      = 0x2314;
_DMA0SELbits  = 0x2314;
 DMA0STAT     = 0x2318;
_DMA0STAT     = 0x2318;
_DMA0STATbits = 0x2318;
 DMA0SRC      = 0x231C;
_DMA0SRC      = 0x231C;
_DMA0SRCbits  = 0x231C;
 DMA0DST      = 0x2320;
_DMA0DST      = 0x2320;
_DMA0DSTbits  = 0x2320;
 DMA0CNT      = 0x2324;
_DMA0CNT      = 0x2324;
_DMA0CNTbits  = 0x2324;
 DMA0CLR      = 0x2328;
_DMA0CLR      = 0x2328;
 DMA0SET      = 0x232C;
_DMA0SET      = 0x232C;
 DMA0INV      = 0x2330;
_DMA0INV      = 0x2330;
 DMA0MSK      = 0x2334;
_DMA0MSK      = 0x2334;
 DMA0PAT      = 0x2338;
_DMA0PAT      = 0x2338;
 DMA1CH       = 0x233C;
_DMA1CH       = 0x233C;
_DMA1CHbits   = 0x233C;
 DMA1SEL      = 0x2340;
_DMA1SEL      = 0x2340;
_DMA1SELbits  = 0x2340;
 DMA1STAT     = 0x2344;
_DMA1STAT     = 0x2344;
_DMA1STATbits = 0x2344;
 DMA1SRC      = 0x2348;
_DMA1SRC      = 0x2348;
_DMA1SRCbits  = 0x2348;
 DMA1DST      = 0x234C;
_DMA1DST      = 0x234C;
_DMA1DSTbits  = 0x234C;
 DMA1CNT      = 0x2350;
_DMA1CNT      = 0x2350;
_DMA1CNTbits  = 0x2350;
 DMA1CLR      = 0x2354;
_DMA1CLR      = 0x2354;
 DMA1SET      = 0x2358;
_DMA1SET      = 0x2358;
 DMA1INV      = 0x235C;
_DMA1INV      = 0x235C;
 DMA1MSK      = 0x2360;
_DMA1MSK      = 0x2360;
 DMA1PAT      = 0x2364;
_DMA1PAT      = 0x2364;
 DMA2CH       = 0x2368;
_DMA2CH       = 0x2368;
_DMA2CHbits   = 0x2368;
 DMA2SEL      = 0x236C;
_DMA2SEL      = 0x236C;
_DMA2SELbits  = 0x236C;
 DMA2STAT     = 0x2370;
_DMA2STAT     = 0x2370;
_DMA2STATbits = 0x2370;
 DMA2SRC      = 0x2374;
_DMA2SRC      = 0x2374;
_DMA2SRCbits  = 0x2374;
 DMA2DST      = 0x2378;
_DMA2DST      = 0x2378;
_DMA2DSTbits  = 0x2378;
 DMA2CNT      = 0x237C;
_DMA2CNT      = 0x237C;
_DMA2CNTbits  = 0x237C;
 DMA2CLR      = 0x2380;
_DMA2CLR      = 0x2380;
 DMA2SET      = 0x2384;
_DMA2SET      = 0x2384;
 DMA2INV      = 0x2388;
_DMA2INV      = 0x2388;
 DMA2MSK      = 0x238C;
_DMA2MSK      = 0x238C;
 DMA2PAT      = 0x2390;
_DMA2PAT      = 0x2390;
 DMA3CH       = 0x2394;
_DMA3CH       = 0x2394;
_DMA3CHbits   = 0x2394;
 DMA3SEL      = 0x2398;
_DMA3SEL      = 0x2398;
_DMA3SELbits  = 0x2398;
 DMA3STAT     = 0x239C;
_DMA3STAT     = 0x239C;
_DMA3STATbits = 0x239C;
 DMA3SRC      = 0x23A0;
_DMA3SRC      = 0x23A0;
_DMA3SRCbits  = 0x23A0;
 DMA3DST      = 0x23A4;
_DMA3DST      = 0x23A4;
_DMA3DSTbits  = 0x23A4;
 DMA3CNT      = 0x23A8;
_DMA3CNT      = 0x23A8;
_DMA3CNTbits  = 0x23A8;
 DMA3CLR      = 0x23AC;
_DMA3CLR      = 0x23AC;
 DMA3SET      = 0x23B0;
_DMA3SET      = 0x23B0;
 DMA3INV      = 0x23B4;
_DMA3INV      = 0x23B4;
 DMA3MSK      = 0x23B8;
_DMA3MSK      = 0x23B8;
 DMA3PAT      = 0x23BC;
_DMA3PAT      = 0x23BC;
 DMA4CH       = 0x23C0;
_DMA4CH       = 0x23C0;
_DMA4CHbits   = 0x23C0;
 DMA4SEL      = 0x23C4;
_DMA4SEL      = 0x23C4;
_DMA4SELbits  = 0x23C4;
 DMA4STAT     = 0x23C8;
_DMA4STAT     = 0x23C8;
_DMA4STATbits = 0x23C8;
 DMA4SRC      = 0x23CC;
_DMA4SRC      = 0x23CC;
_DMA4SRCbits  = 0x23CC;
 DMA4DST      = 0x23D0;
_DMA4DST      = 0x23D0;
_DMA4DSTbits  = 0x23D0;
 DMA4CNT      = 0x23D4;
_DMA4CNT      = 0x23D4;
_DMA4CNTbits  = 0x23D4;
 DMA4CLR      = 0x23D8;
_DMA4CLR      = 0x23D8;
 DMA4SET      = 0x23DC;
_DMA4SET      = 0x23DC;
 DMA4INV      = 0x23E0;
_DMA4INV      = 0x23E0;
 DMA4MSK      = 0x23E4;
_DMA4MSK      = 0x23E4;
 DMA4PAT      = 0x23E8;
_DMA4PAT      = 0x23E8;
 DMA5CH       = 0x23EC;
_DMA5CH       = 0x23EC;
_DMA5CHbits   = 0x23EC;
 DMA5SEL      = 0x23F0;
_DMA5SEL      = 0x23F0;
_DMA5SELbits  = 0x23F0;
 DMA5STAT     = 0x23F4;
_DMA5STAT     = 0x23F4;
_DMA5STATbits = 0x23F4;
 DMA5SRC      = 0x23F8;
_DMA5SRC      = 0x23F8;
_DMA5SRCbits  = 0x23F8;
 DMA5DST      = 0x23FC;
_DMA5DST      = 0x23FC;
_DMA5DSTbits  = 0x23FC;
 DMA5CNT      = 0x2400;
_DMA5CNT      = 0x2400;
_DMA5CNTbits  = 0x2400;
 DMA5CLR      = 0x2404;
_DMA5CLR      = 0x2404;
 DMA5SET      = 0x2408;
_DMA5SET      = 0x2408;
 DMA5INV      = 0x240C;
_DMA5INV      = 0x240C;
 DMA5MSK      = 0x2410;
_DMA5MSK      = 0x2410;
 DMA5PAT      = 0x2414;
_DMA5PAT      = 0x2414;
 NVMCON       = 0x3000;
_NVMCON       = 0x3000;
_NVMCONbits   = 0x3000;
 NVMADR       = 0x3004;
_NVMADR       = 0x3004;
_NVMADRbits   = 0x3004;
 NVMDATA0     = 0x3008;
_NVMDATA0     = 0x3008;
 NVMDATA1     = 0x300C;
_NVMDATA1     = 0x300C;
 NVMDATA2     = 0x3010;
_NVMDATA2     = 0x3010;
 NVMDATA3     = 0x3014;
_NVMDATA3     = 0x3014;
 NVMSRCADR    = 0x3018;
_NVMSRCADR    = 0x3018;
_NVMSRCADRbits = 0x3018;
 NVMECCCON    = 0x301C;
_NVMECCCON    = 0x301C;
_NVMECCCONbits = 0x301C;
 NVMECCSTAT   = 0x3020;
_NVMECCSTAT   = 0x3020;
_NVMECCSTATbits = 0x3020;
 NVMECCFPTR   = 0x3024;
_NVMECCFPTR   = 0x3024;
_NVMECCFPTRbits = 0x3024;
 NVMECCFADR   = 0x3028;
_NVMECCFADR   = 0x3028;
_NVMECCFADRbits = 0x3028;
 NVMECCEADR   = 0x302C;
_NVMECCEADR   = 0x302C;
_NVMECCEADRbits = 0x302C;
 NVMECCEDATA0 = 0x3030;
_NVMECCEDATA0 = 0x3030;
 NVMECCEDATA1 = 0x3034;
_NVMECCEDATA1 = 0x3034;
 NVMECCEDATA2 = 0x3038;
_NVMECCEDATA2 = 0x3038;
 NVMECCEDATA3 = 0x303C;
_NVMECCEDATA3 = 0x303C;
 NVMECCVAL    = 0x3040;
_NVMECCVAL    = 0x3040;
_NVMECCVALbits = 0x3040;
 NVMECCSYND   = 0x3044;
_NVMECCSYND   = 0x3044;
_NVMECCSYNDbits = 0x3044;
 NVMCRCCON    = 0x3048;
_NVMCRCCON    = 0x3048;
_NVMCRCCONbits = 0x3048;
 NVMCRCST     = 0x304C;
_NVMCRCST     = 0x304C;
_NVMCRCSTbits = 0x304C;
 NVMCRCEND    = 0x3050;
_NVMCRCEND    = 0x3050;
_NVMCRCENDbits = 0x3050;
 NVMCRCSEED   = 0x3054;
_NVMCRCSEED   = 0x3054;
 NVMCRCDATA   = 0x3058;
_NVMCRCDATA   = 0x3058;
 OSCCTRL      = 0x3100;
_OSCCTRL      = 0x3100;
_OSCCTRLbits  = 0x3100;
 OSCCFG       = 0x3104;
_OSCCFG       = 0x3104;
_OSCCFGbits   = 0x3104;
 CLKFAIL      = 0x3108;
_CLKFAIL      = 0x3108;
_CLKFAILbits  = 0x3108;
 SCSFAIL      = 0x310C;
_SCSFAIL      = 0x310C;
_SCSFAILbits  = 0x310C;
 CLK1CON      = 0x3118;
_CLK1CON      = 0x3118;
_CLK1CONbits  = 0x3118;
 CLK1DIV      = 0x311C;
_CLK1DIV      = 0x311C;
_CLK1DIVbits  = 0x311C;
 CLK2CON      = 0x3120;
_CLK2CON      = 0x3120;
_CLK2CONbits  = 0x3120;
 CLK2DIV      = 0x3124;
_CLK2DIV      = 0x3124;
_CLK2DIVbits  = 0x3124;
 CLK3CON      = 0x3128;
_CLK3CON      = 0x3128;
_CLK3CONbits  = 0x3128;
 CLK3DIV      = 0x312C;
_CLK3DIV      = 0x312C;
_CLK3DIVbits  = 0x312C;
 CLK4CON      = 0x3130;
_CLK4CON      = 0x3130;
_CLK4CONbits  = 0x3130;
 CLK4DIV      = 0x3134;
_CLK4DIV      = 0x3134;
_CLK4DIVbits  = 0x3134;
 CLK5CON      = 0x3138;
_CLK5CON      = 0x3138;
_CLK5CONbits  = 0x3138;
 CLK5DIV      = 0x313C;
_CLK5DIV      = 0x313C;
_CLK5DIVbits  = 0x313C;
 CLK6CON      = 0x3140;
_CLK6CON      = 0x3140;
_CLK6CONbits  = 0x3140;
 CLK6DIV      = 0x3144;
_CLK6DIV      = 0x3144;
_CLK6DIVbits  = 0x3144;
 CLK7CON      = 0x3148;
_CLK7CON      = 0x3148;
_CLK7CONbits  = 0x3148;
 CLK7DIV      = 0x314C;
_CLK7DIV      = 0x314C;
_CLK7DIVbits  = 0x314C;
 CLK8CON      = 0x3150;
_CLK8CON      = 0x3150;
_CLK8CONbits  = 0x3150;
 CLK8DIV      = 0x3154;
_CLK8DIV      = 0x3154;
_CLK8DIVbits  = 0x3154;
 CLK9CON      = 0x3158;
_CLK9CON      = 0x3158;
_CLK9CONbits  = 0x3158;
 CLK9DIV      = 0x315C;
_CLK9DIV      = 0x315C;
_CLK9DIVbits  = 0x315C;
 CLK10CON     = 0x3160;
_CLK10CON     = 0x3160;
_CLK10CONbits = 0x3160;
 CLK10DIV     = 0x3164;
_CLK10DIV     = 0x3164;
_CLK10DIVbits = 0x3164;
 CLK11CON     = 0x3168;
_CLK11CON     = 0x3168;
_CLK11CONbits = 0x3168;
 CLK11DIV     = 0x316C;
_CLK11DIV     = 0x316C;
_CLK11DIVbits = 0x316C;
 CLK12CON     = 0x3170;
_CLK12CON     = 0x3170;
_CLK12CONbits = 0x3170;
 CLK12DIV     = 0x3174;
_CLK12DIV     = 0x3174;
_CLK12DIVbits = 0x3174;
 CLK13CON     = 0x3178;
_CLK13CON     = 0x3178;
_CLK13CONbits = 0x3178;
 CLK13DIV     = 0x317C;
_CLK13DIV     = 0x317C;
_CLK13DIVbits = 0x317C;
 PLL1CON      = 0x3180;
_PLL1CON      = 0x3180;
_PLL1CONbits  = 0x3180;
 PLL1DIV      = 0x3184;
_PLL1DIV      = 0x3184;
_PLL1DIVbits  = 0x3184;
 VCO1DIV      = 0x3188;
_VCO1DIV      = 0x3188;
_VCO1DIVbits  = 0x3188;
 PLL2CON      = 0x318C;
_PLL2CON      = 0x318C;
_PLL2CONbits  = 0x318C;
 PLL2DIV      = 0x3190;
_PLL2DIV      = 0x3190;
_PLL2DIVbits  = 0x3190;
 VCO2DIV      = 0x3194;
_VCO2DIV      = 0x3194;
_VCO2DIVbits  = 0x3194;
 RCON         = 0x3198;
_RCON         = 0x3198;
_RCONbits     = 0x3198;
 CLKDIAG      = 0x319C;
_CLKDIAG      = 0x319C;
_CLKDIAGbits  = 0x319C;
 CM1CON       = 0x3200;
_CM1CON       = 0x3200;
_CM1CONbits   = 0x3200;
 CM1STAT      = 0x3204;
_CM1STAT      = 0x3204;
_CM1STATbits  = 0x3204;
 CM1WINPR     = 0x3208;
_CM1WINPR     = 0x3208;
 CM1SEL       = 0x320C;
_CM1SEL       = 0x320C;
_CM1SELbits   = 0x320C;
 CM1BUF       = 0x3210;
_CM1BUF       = 0x3210;
 CM1SAT       = 0x3214;
_CM1SAT       = 0x3214;
 CM1HFAIL     = 0x3218;
_CM1HFAIL     = 0x3218;
 CM1LFAIL     = 0x321C;
_CM1LFAIL     = 0x321C;
 CM1HWARN     = 0x3220;
_CM1HWARN     = 0x3220;
 CM1LWARN     = 0x3224;
_CM1LWARN     = 0x3224;
 CM2CON       = 0x3230;
_CM2CON       = 0x3230;
_CM2CONbits   = 0x3230;
 CM2STAT      = 0x3234;
_CM2STAT      = 0x3234;
_CM2STATbits  = 0x3234;
 CM2WINPR     = 0x3238;
_CM2WINPR     = 0x3238;
 CM2SEL       = 0x323C;
_CM2SEL       = 0x323C;
_CM2SELbits   = 0x323C;
 CM2BUF       = 0x3240;
_CM2BUF       = 0x3240;
 CM2SAT       = 0x3244;
_CM2SAT       = 0x3244;
 CM2HFAIL     = 0x3248;
_CM2HFAIL     = 0x3248;
 CM2LFAIL     = 0x324C;
_CM2LFAIL     = 0x324C;
 CM2HWARN     = 0x3250;
_CM2HWARN     = 0x3250;
 CM2LWARN     = 0x3254;
_CM2LWARN     = 0x3254;
 CM3CON       = 0x3260;
_CM3CON       = 0x3260;
_CM3CONbits   = 0x3260;
 CM3STAT      = 0x3264;
_CM3STAT      = 0x3264;
_CM3STATbits  = 0x3264;
 CM3WINPR     = 0x3268;
_CM3WINPR     = 0x3268;
 CM3SEL       = 0x326C;
_CM3SEL       = 0x326C;
_CM3SELbits   = 0x326C;
 CM3BUF       = 0x3270;
_CM3BUF       = 0x3270;
 CM3SAT       = 0x3274;
_CM3SAT       = 0x3274;
 CM3HFAIL     = 0x3278;
_CM3HFAIL     = 0x3278;
 CM3LFAIL     = 0x327C;
_CM3LFAIL     = 0x327C;
 CM3HWARN     = 0x3280;
_CM3HWARN     = 0x3280;
 CM3LWARN     = 0x3284;
_CM3LWARN     = 0x3284;
 CM4CON       = 0x3290;
_CM4CON       = 0x3290;
_CM4CONbits   = 0x3290;
 CM4STAT      = 0x3294;
_CM4STAT      = 0x3294;
_CM4STATbits  = 0x3294;
 CM4WINPR     = 0x3298;
_CM4WINPR     = 0x3298;
 CM4SEL       = 0x329C;
_CM4SEL       = 0x329C;
_CM4SELbits   = 0x329C;
 CM4BUF       = 0x32A0;
_CM4BUF       = 0x32A0;
 CM4SAT       = 0x32A4;
_CM4SAT       = 0x32A4;
 CM4HFAIL     = 0x32A8;
_CM4HFAIL     = 0x32A8;
 CM4LFAIL     = 0x32AC;
_CM4LFAIL     = 0x32AC;
 CM4HWARN     = 0x32B0;
_CM4HWARN     = 0x32B0;
 CM4LWARN     = 0x32B4;
_CM4LWARN     = 0x32B4;
 FRCTUN       = 0x32C0;
_FRCTUN       = 0x32C0;
_FRCTUNbits   = 0x32C0;
 BFRCTUN      = 0x32C4;
_BFRCTUN      = 0x32C4;
_BFRCTUNbits  = 0x32C4;
 WDTCON       = 0x32C8;
_WDTCON       = 0x32C8;
_WDTCONbits   = 0x32C8;
 PTGCON       = 0x3500;
_PTGCON       = 0x3500;
_PTGCONbits   = 0x3500;
 PTGBTE       = 0x3504;
_PTGBTE       = 0x3504;
 PTGHOLD      = 0x3508;
_PTGHOLD      = 0x3508;
_PTGHOLDbits  = 0x3508;
 PTGT0LIM     = 0x350C;
_PTGT0LIM     = 0x350C;
_PTGT0LIMbits = 0x350C;
 PTGT1LIM     = 0x3510;
_PTGT1LIM     = 0x3510;
_PTGT1LIMbits = 0x3510;
 PTGSDLIM     = 0x3514;
_PTGSDLIM     = 0x3514;
_PTGSDLIMbits = 0x3514;
 PTGC0LIM     = 0x3518;
_PTGC0LIM     = 0x3518;
_PTGC0LIMbits = 0x3518;
 PTGC1LIM     = 0x351C;
_PTGC1LIM     = 0x351C;
_PTGC1LIMbits = 0x351C;
 PTGADJ       = 0x3520;
_PTGADJ       = 0x3520;
_PTGADJbits   = 0x3520;
 PTGL0        = 0x3524;
_PTGL0        = 0x3524;
_PTGL0bits    = 0x3524;
 PTGQPTR      = 0x3528;
_PTGQPTR      = 0x3528;
_PTGQPTRbits  = 0x3528;
 PTGQUE0      = 0x3530;
_PTGQUE0      = 0x3530;
_PTGQUE0bits  = 0x3530;
 PTGQUE1      = 0x3534;
_PTGQUE1      = 0x3534;
_PTGQUE1bits  = 0x3534;
 PTGQUE2      = 0x3538;
_PTGQUE2      = 0x3538;
_PTGQUE2bits  = 0x3538;
 PTGQUE3      = 0x353C;
_PTGQUE3      = 0x353C;
_PTGQUE3bits  = 0x353C;
 PTGQUE4      = 0x3540;
_PTGQUE4      = 0x3540;
_PTGQUE4bits  = 0x3540;
 PTGQUE5      = 0x3544;
_PTGQUE5      = 0x3544;
_PTGQUE5bits  = 0x3544;
 PTGQUE6      = 0x3548;
_PTGQUE6      = 0x3548;
_PTGQUE6bits  = 0x3548;
 PTGQUE7      = 0x354C;
_PTGQUE7      = 0x354C;
_PTGQUE7bits  = 0x354C;
 BMXECCXCON   = 0x3580;
_BMXECCXCON   = 0x3580;
_BMXECCXCONbits = 0x3580;
 BMXECCXSTAT  = 0x3584;
_BMXECCXSTAT  = 0x3584;
_BMXECCXSTATbits = 0x3584;
 BMXECCXFPTR  = 0x3588;
_BMXECCXFPTR  = 0x3588;
_BMXECCXFPTRbits = 0x3588;
 BMXECCXFADDR = 0x358C;
_BMXECCXFADDR = 0x358C;
 BMXECCXEADDR = 0x3590;
_BMXECCXEADDR = 0x3590;
 BMXECCXEDATA = 0x3594;
_BMXECCXEDATA = 0x3594;
 BMXECCXVAL   = 0x3598;
_BMXECCXVAL   = 0x3598;
_BMXECCXVALbits = 0x3598;
 BMXECCXSYND  = 0x359C;
_BMXECCXSYND  = 0x359C;
_BMXECCXSYNDbits = 0x359C;
 PWBECCXCON   = 0x35A0;
_PWBECCXCON   = 0x35A0;
_PWBECCXCONbits = 0x35A0;
 PWBECCXSTAT  = 0x35A4;
_PWBECCXSTAT  = 0x35A4;
_PWBECCXSTATbits = 0x35A4;
 PWBECCXFPTR  = 0x35A8;
_PWBECCXFPTR  = 0x35A8;
_PWBECCXFPTRbits = 0x35A8;
 PWBECCXFADDR = 0x35AC;
_PWBECCXFADDR = 0x35AC;
 PWBECCXEADDR = 0x35B0;
_PWBECCXEADDR = 0x35B0;
 PWBECCXEDATA = 0x35B4;
_PWBECCXEDATA = 0x35B4;
 PWBECCXVAL   = 0x35B8;
_PWBECCXVAL   = 0x35B8;
_PWBECCXVALbits = 0x35B8;
 PWBECCXSYND  = 0x35BC;
_PWBECCXSYND  = 0x35BC;
_PWBECCXSYNDbits = 0x35BC;
 BMXECCYCON   = 0x35C0;
_BMXECCYCON   = 0x35C0;
_BMXECCYCONbits = 0x35C0;
 BMXECCYSTAT  = 0x35C4;
_BMXECCYSTAT  = 0x35C4;
_BMXECCYSTATbits = 0x35C4;
 BMXECCYFPTR  = 0x35C8;
_BMXECCYFPTR  = 0x35C8;
_BMXECCYFPTRbits = 0x35C8;
 BMXECCYFADDR = 0x35CC;
_BMXECCYFADDR = 0x35CC;
 BMXECCYEADDR = 0x35D0;
_BMXECCYEADDR = 0x35D0;
 BMXECCYEDATA = 0x35D4;
_BMXECCYEDATA = 0x35D4;
 BMXECCYVAL   = 0x35D8;
_BMXECCYVAL   = 0x35D8;
_BMXECCYVALbits = 0x35D8;
 BMXECCYSYND  = 0x35DC;
_BMXECCYSYND  = 0x35DC;
_BMXECCYSYNDbits = 0x35DC;
 PWBECCYCON   = 0x35E0;
_PWBECCYCON   = 0x35E0;
_PWBECCYCONbits = 0x35E0;
 PWBECCYSTAT  = 0x35E4;
_PWBECCYSTAT  = 0x35E4;
_PWBECCYSTATbits = 0x35E4;
 PWBECCYFPTR  = 0x35E8;
_PWBECCYFPTR  = 0x35E8;
_PWBECCYFPTRbits = 0x35E8;
 PWBECCYFADDR = 0x35EC;
_PWBECCYFADDR = 0x35EC;
 PWBECCYEADDR = 0x35F0;
_PWBECCYEADDR = 0x35F0;
 PWBECCYEDATA = 0x35F4;
_PWBECCYEDATA = 0x35F4;
 PWBECCYVAL   = 0x35F8;
_PWBECCYVAL   = 0x35F8;
_PWBECCYVALbits = 0x35F8;
 PWBECCYSYND  = 0x35FC;
_PWBECCYSYND  = 0x35FC;
_PWBECCYSYNDbits = 0x35FC;
 ANSELA       = 0x3640;
_ANSELA       = 0x3640;
_ANSELAbits   = 0x3640;
 ODCA         = 0x3644;
_ODCA         = 0x3644;
_ODCAbits     = 0x3644;
 CNPUA        = 0x3648;
_CNPUA        = 0x3648;
_CNPUAbits    = 0x3648;
 CNPDA        = 0x364C;
_CNPDA        = 0x364C;
_CNPDAbits    = 0x364C;
 CNCONA       = 0x3650;
_CNCONA       = 0x3650;
_CNCONAbits   = 0x3650;
 CNEN0A       = 0x3654;
_CNEN0A       = 0x3654;
_CNEN0Abits   = 0x3654;
 CNEN1A       = 0x3658;
_CNEN1A       = 0x3658;
_CNEN1Abits   = 0x3658;
 ANSELB       = 0x3664;
_ANSELB       = 0x3664;
_ANSELBbits   = 0x3664;
 ODCB         = 0x3668;
_ODCB         = 0x3668;
_ODCBbits     = 0x3668;
 CNPUB        = 0x366C;
_CNPUB        = 0x366C;
_CNPUBbits    = 0x366C;
 CNPDB        = 0x3670;
_CNPDB        = 0x3670;
_CNPDBbits    = 0x3670;
 CNCONB       = 0x3674;
_CNCONB       = 0x3674;
_CNCONBbits   = 0x3674;
 CNEN0B       = 0x3678;
_CNEN0B       = 0x3678;
_CNEN0Bbits   = 0x3678;
 CNEN1B       = 0x367C;
_CNEN1B       = 0x367C;
_CNEN1Bbits   = 0x367C;
 ANSELC       = 0x3688;
_ANSELC       = 0x3688;
 ODCC         = 0x368C;
_ODCC         = 0x368C;
_ODCCbits     = 0x368C;
 CNPUC        = 0x3690;
_CNPUC        = 0x3690;
_CNPUCbits    = 0x3690;
 CNPDC        = 0x3694;
_CNPDC        = 0x3694;
_CNPDCbits    = 0x3694;
 CNCONC       = 0x3698;
_CNCONC       = 0x3698;
_CNCONCbits   = 0x3698;
 CNEN0C       = 0x369C;
_CNEN0C       = 0x369C;
_CNEN0Cbits   = 0x369C;
 CNEN1C       = 0x36A0;
_CNEN1C       = 0x36A0;
_CNEN1Cbits   = 0x36A0;
 ANSELD       = 0x36AC;
_ANSELD       = 0x36AC;
 ODCD         = 0x36B0;
_ODCD         = 0x36B0;
_ODCDbits     = 0x36B0;
 CNPUD        = 0x36B4;
_CNPUD        = 0x36B4;
_CNPUDbits    = 0x36B4;
 CNPDD        = 0x36B8;
_CNPDD        = 0x36B8;
_CNPDDbits    = 0x36B8;
 CNCOND       = 0x36BC;
_CNCOND       = 0x36BC;
_CNCONDbits   = 0x36BC;
 CNEN0D       = 0x36C0;
_CNEN0D       = 0x36C0;
_CNEN0Dbits   = 0x36C0;
 CNEN1D       = 0x36C4;
_CNEN1D       = 0x36C4;
_CNEN1Dbits   = 0x36C4;
 RPCON        = 0x3900;
_RPCON        = 0x3900;
_RPCONbits    = 0x3900;
 RPINR0       = 0x3904;
_RPINR0       = 0x3904;
_RPINR0bits   = 0x3904;
 RPINR1       = 0x3908;
_RPINR1       = 0x3908;
_RPINR1bits   = 0x3908;
 RPINR2       = 0x390C;
_RPINR2       = 0x390C;
_RPINR2bits   = 0x390C;
 RPINR5       = 0x3918;
_RPINR5       = 0x3918;
_RPINR5bits   = 0x3918;
 RPINR6       = 0x391C;
_RPINR6       = 0x391C;
_RPINR6bits   = 0x391C;
 RPINR7       = 0x3920;
_RPINR7       = 0x3920;
_RPINR7bits   = 0x3920;
 RPINR9       = 0x3928;
_RPINR9       = 0x3928;
_RPINR9bits   = 0x3928;
 RPINR10      = 0x392C;
_RPINR10      = 0x392C;
_RPINR10bits  = 0x392C;
 RPINR11      = 0x3930;
_RPINR11      = 0x3930;
_RPINR11bits  = 0x3930;
 RPINR13      = 0x3938;
_RPINR13      = 0x3938;
_RPINR13bits  = 0x3938;
 RPINR14      = 0x393C;
_RPINR14      = 0x393C;
_RPINR14bits  = 0x393C;
 RPINR15      = 0x3940;
_RPINR15      = 0x3940;
_RPINR15bits  = 0x3940;
 RPINR17      = 0x3948;
_RPINR17      = 0x3948;
_RPINR17bits  = 0x3948;
 RPINR18      = 0x394C;
_RPINR18      = 0x394C;
_RPINR18bits  = 0x394C;
 RPINR19      = 0x3950;
_RPINR19      = 0x3950;
_RPINR19bits  = 0x3950;
 RPINR20      = 0x3954;
_RPINR20      = 0x3954;
_RPINR20bits  = 0x3954;
 RPINR21      = 0x3958;
_RPINR21      = 0x3958;
_RPINR21bits  = 0x3958;
 RPOR0        = 0x3980;
_RPOR0        = 0x3980;
_RPOR0bits    = 0x3980;
 RPOR1        = 0x3984;
_RPOR1        = 0x3984;
_RPOR1bits    = 0x3984;
 RPOR2        = 0x3988;
_RPOR2        = 0x3988;
_RPOR2bits    = 0x3988;
 RPOR4        = 0x3990;
_RPOR4        = 0x3990;
_RPOR4bits    = 0x3990;
 RPOR5        = 0x3994;
_RPOR5        = 0x3994;
_RPOR5bits    = 0x3994;
 RPOR6        = 0x3998;
_RPOR6        = 0x3998;
_RPOR6bits    = 0x3998;
 RPOR8        = 0x39A0;
_RPOR8        = 0x39A0;
_RPOR8bits    = 0x39A0;
 RPOR9        = 0x39A4;
_RPOR9        = 0x39A4;
_RPOR9bits    = 0x39A4;
 RPOR10       = 0x39A8;
_RPOR10       = 0x39A8;
_RPOR10bits   = 0x39A8;
 RPOR12       = 0x39B0;
_RPOR12       = 0x39B0;
_RPOR12bits   = 0x39B0;
 RPOR13       = 0x39B4;
_RPOR13       = 0x39B4;
_RPOR13bits   = 0x39B4;
 RPOR14       = 0x39B8;
_RPOR14       = 0x39B8;
_RPOR14bits   = 0x39B8;
 RPOR15       = 0x39BC;
_RPOR15       = 0x39BC;
_RPOR15bits   = 0x39BC;
 RPOR16       = 0x39C0;
_RPOR16       = 0x39C0;
_RPOR16bits   = 0x39C0;
 RPOR17       = 0x39C4;
_RPOR17       = 0x39C4;
_RPOR17bits   = 0x39C4;
 RPOR18       = 0x39C8;
_RPOR18       = 0x39C8;
_RPOR18bits   = 0x39C8;
 RPOR19       = 0x39CC;
_RPOR19       = 0x39CC;
_RPOR19bits   = 0x39CC;
 DMTCON       = 0x3A00;
_DMTCON       = 0x3A00;
_DMTCONbits   = 0x3A00;
 DMTPRECLR    = 0x3A04;
_DMTPRECLR    = 0x3A04;
_DMTPRECLRbits = 0x3A04;
 DMTCLR       = 0x3A08;
_DMTCLR       = 0x3A08;
_DMTCLRbits   = 0x3A08;
 DMTSTAT      = 0x3A0C;
_DMTSTAT      = 0x3A0C;
_DMTSTATbits  = 0x3A0C;
 DMTCNT       = 0x3A10;
_DMTCNT       = 0x3A10;
 PSCNT        = 0x3A14;
_PSCNT        = 0x3A14;
 PSINTV       = 0x3A18;
_PSINTV       = 0x3A18;
 PPPC         = 0x3A1C;
_PPPC         = 0x3A1C;
_PPPCbits     = 0x3A1C;
 PPC          = 0x3A20;
_PPC          = 0x3A20;
_PPCbits      = 0x3A20;
 PMD1         = 0x3A44;
_PMD1         = 0x3A44;
_PMD1bits     = 0x3A44;
 PMD2         = 0x3A48;
_PMD2         = 0x3A48;
_PMD2bits     = 0x3A48;
 PMD3         = 0x3A4C;
_PMD3         = 0x3A4C;
_PMD3bits     = 0x3A4C;
 PMD4         = 0x3A50;
_PMD4         = 0x3A50;
_PMD4bits     = 0x3A50;
 CLC1CON      = 0x3A60;
_CLC1CON      = 0x3A60;
_CLC1CONbits  = 0x3A60;
 CLC1SEL      = 0x3A64;
_CLC1SEL      = 0x3A64;
_CLC1SELbits  = 0x3A64;
 CLC1GLS      = 0x3A68;
_CLC1GLS      = 0x3A68;
_CLC1GLSbits  = 0x3A68;
 CLC2CON      = 0x3A70;
_CLC2CON      = 0x3A70;
_CLC2CONbits  = 0x3A70;
 CLC2SEL      = 0x3A74;
_CLC2SEL      = 0x3A74;
_CLC2SELbits  = 0x3A74;
 CLC2GLS      = 0x3A78;
_CLC2GLS      = 0x3A78;
_CLC2GLSbits  = 0x3A78;
 CLC3CON      = 0x3A80;
_CLC3CON      = 0x3A80;
_CLC3CONbits  = 0x3A80;
 CLC3SEL      = 0x3A84;
_CLC3SEL      = 0x3A84;
_CLC3SELbits  = 0x3A84;
 CLC3GLS      = 0x3A88;
_CLC3GLS      = 0x3A88;
_CLC3GLSbits  = 0x3A88;
 CLC4CON      = 0x3A90;
_CLC4CON      = 0x3A90;
_CLC4CONbits  = 0x3A90;
 CLC4SEL      = 0x3A94;
_CLC4SEL      = 0x3A94;
_CLC4SELbits  = 0x3A94;
 CLC4GLS      = 0x3A98;
_CLC4GLS      = 0x3A98;
_CLC4GLSbits  = 0x3A98;
 MBISTCON     = 0x3AA0;
_MBISTCON     = 0x3AA0;
_MBISTCONbits = 0x3AA0;
 IBIASCON     = 0x3AA4;
_IBIASCON     = 0x3AA4;
_IBIASCONbits = 0x3AA4;
 AMP1CON1     = 0x3AB0;
_AMP1CON1     = 0x3AB0;
_AMP1CON1bits = 0x3AB0;
 AMP1CON2     = 0x3AB4;
_AMP1CON2     = 0x3AB4;
_AMP1CON2bits = 0x3AB4;
 AMP2CON1     = 0x3AB8;
_AMP2CON1     = 0x3AB8;
_AMP2CON1bits = 0x3AB8;
 AMP2CON2     = 0x3ABC;
_AMP2CON2     = 0x3ABC;
_AMP2CON2bits = 0x3ABC;
 AMP3CON1     = 0x3AC0;
_AMP3CON1     = 0x3AC0;
_AMP3CON1bits = 0x3AC0;
 AMP3CON2     = 0x3AC4;
_AMP3CON2     = 0x3AC4;
_AMP3CON2bits = 0x3AC4;
/*
** ======= Base Addresses for Various Peripherals and ACC ======
*/

 SPI1         = 0x1808;
_SPI1         = 0x1808;
 SPI2         = 0x1828;
_SPI2         = 0x1828;
 SPI3         = 0x1848;
_SPI3         = 0x1848;
 UART1        = 0x1700;
_UART1        = 0x1700;
 UART2        = 0x1740;
_UART2        = 0x1740;
 UART3        = 0x1780;
_UART3        = 0x1780;
